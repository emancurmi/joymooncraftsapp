{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Select from 'react-select';\n\nconst ReactSelect = () => {\n  const customSelectStyles = {\n    control: (provided, state) => _objectSpread(_objectSpread({}, provided), {}, {\n      border: '1px solid #ced4da',\n      borderRadius: '0',\n      width: 200,\n      cursor: 'pointer'\n    }),\n    indicatorSeparator: (provided, state) => ({\n      display: 'none'\n    }),\n    menu: (provided, state) => _objectSpread(_objectSpread({}, provided), {}, {\n      color: '#343a40',\n      border: '0 solid #fff',\n      boxShadow: '0 0 1.2rem rgba(0, 0, 0, .15)'\n    }),\n    option: (provided, {\n      data,\n      isDisabled,\n      isFocused,\n      isSelected\n    }) => _objectSpread(_objectSpread({}, provided), {}, {\n      backgroundColor: isDisabled ? null : isSelected ? '#bcac76' : isFocused ? '#eee' : null,\n      ':active': _objectSpread(_objectSpread({}, provided[':active']), {}, {\n        backgroundColor: '#e2dabc'\n      }),\n      cursor: 'pointer'\n    })\n  };\n  return __jsx(\"div\", {\n    id: \"react-select\",\n    className: \"docs-item element\"\n  }, __jsx(\"h5\", {\n    className: \"text-uppercase mb-4\"\n  }, \"React Select\"), __jsx(\"div\", {\n    className: \"docs-desc\"\n  }, __jsx(\"p\", {\n    className: \"lead\"\n  }, \"Varkala Theme uses React Select plugin for showing select input. You can customize it using props.\"), __jsx(\"p\", null, __jsx(\"a\", {\n    href: \"https://react-select.com/\",\n    className: \"btn btn-outline-dark btn-sm\"\n  }, \"Visit plugin website\"))), __jsx(\"div\", {\n    className: \"mt-5\"\n  }, __jsx(Select, {\n    instanceId: \"sortBySelect\",\n    options: selectOptions,\n    defaultValue: selectOptions[0],\n    className: \"react-select-container\",\n    classNamePrefix: \"react-select\",\n    styles: customSelectStyles,\n    isSearchable: false\n  })));\n};\n\nexport default ReactSelect;\nconst selectOptions = [{\n  \"value\": \"popular\",\n  \"label\": \"Most popular\"\n}, {\n  \"value\": \"recommended\",\n  \"label\": \"Recommended\"\n}, {\n  \"value\": \"newest\",\n  \"label\": \"Newest\"\n}, {\n  \"value\": \"oldest\",\n  \"label\": \"Oldest\"\n}, {\n  \"value\": \"closest\",\n  \"label\": \"Closest\"\n}];","map":null,"metadata":{},"sourceType":"module"}