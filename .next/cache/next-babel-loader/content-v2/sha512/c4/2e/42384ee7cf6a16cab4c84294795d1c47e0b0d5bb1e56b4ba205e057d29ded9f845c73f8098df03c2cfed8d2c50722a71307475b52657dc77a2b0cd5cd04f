{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eman\\\\source\\\\repos\\\\emancurmi\\\\joymooncraftsapp\\\\src\\\\components\\\\Swiper.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport ReactIdSwiper from \"react-id-swiper\";\nimport { Container, Row, Col, Button } from \"reactstrap\";\nexport default function Swiper(props) {\n  const breakpoints = [];\n\n  if (props.sm) {\n    breakpoints[565] = {\n      slidesPerView: props.sm\n    };\n  }\n\n  if (props.md) {\n    breakpoints[768] = {\n      slidesPerView: props.md\n    };\n  }\n\n  if (props.lg) {\n    breakpoints[991] = {\n      slidesPerView: props.lg\n    };\n  }\n\n  if (props.xl) {\n    breakpoints[1200] = {\n      slidesPerView: props.xl\n    };\n  }\n\n  if (props.xxl) {\n    breakpoints[1400] = {\n      slidesPerView: props.xxl\n    };\n  }\n\n  if (props.xxxl) {\n    breakpoints[1600] = {\n      slidesPerView: props.xxxl\n    };\n  }\n\n  const params = {\n    containerClass: `swiper-container ${props.className ? props.className : \"\"}`,\n    slidesPerView: props.slidesPerView,\n    effect: props.effect,\n    allowTouchMove: props.allowTouchMove === false ? false : true,\n    spaceBetween: props.spaceBetween,\n    centeredSlides: props.centeredSlides,\n    roundLengths: props.roundLengths,\n    loop: props.loop,\n    speed: props.speed ? props.speed : 400,\n    parallax: props.parallax,\n    breakpoints: breakpoints,\n    autoplay: props.autoplay ? {\n      delay: props.delay\n    } : false,\n    pagination: props.pagination !== false ? {\n      el: `.swiper-pagination.${props.paginationClass}`,\n      clickable: true,\n      dynamicBullets: true\n    } : false,\n    navigation: {\n      nextEl: props.navigation ? `.swiper-button-next.swiper-button-${props.navigationColor ? props.navigationColor : \"white\"}.swiper-nav.d-none.d-lg-block` : \"\",\n      prevEl: props.navigation ? `.swiper-button-prev.swiper-button-${props.navigationColor ? props.navigationColor : \"white\"}.swiper-nav.d-none.d-lg-block` : \"\"\n    },\n    wrapperClass: `swiper-wrapper ${props.wrapperClass ? props.wrapperClass : \"\"}`\n  };\n  return props.data ? __jsx(ReactIdSwiper, _extends({}, params, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }), props.data.map((slide, index) => __jsx(\"div\", {\n    key: index,\n    className: `${slide.itemclass ? slide.itemclass : \"\"} ${!props.columns ? \"bg-cover\" : \"\"} ${slide.bgdirection ? `bg-cover-${slide.bgdirection}` : \"\"} ${slide.darkOverlay ? `dark-overlay` : \"\"}`,\n    style: _objectSpread(_objectSpread({}, props.style), {}, {\n      backgroundImage: !props.columns ? `url(${slide.img})` : `none`\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, __jsx(Container, {\n    fluid: props.containerFluid,\n    className: `h-100 ${!props.columns ? \"px-lg-6\" : \"\"} ${props.containerclass ? props.containerclass : \"\"}`,\n    style: slide.containerStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, __jsx(Row, {\n    className: `overlay-content h-100 align-items-center ${slide.rowclass ? slide.rowclass : \"\"}`,\n    \"data-swiper-parallax\": \"-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    lg: {\n      size: props.columns ? 8 : 6,\n      offset: slide.contentoffset\n    },\n    className: slide.contentclass ? slide.contentclass : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, slide.subtitle && __jsx(\"p\", {\n    className: `subtitle letter-spacing-${props.columns ? 5 : 3} font-weight-light ${slide.subtitleclass ? slide.subtitleclass : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }, slide.subtitle), __jsx(\"h2\", {\n    className: slide.titleclass ? slide.titleclass : \"\",\n    style: {\n      lineHeight: \"1\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, slide.name), slide.text && __jsx(\"p\", {\n    className: `${props.columns ? \"text-muted\" : \"lead\"}  mb-5`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  }, slide.text), __jsx(Button, {\n    color: props.columns ? \"outline-dark\" : \"light\",\n    href: slide.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, slide.button))))))) : \"loading\";\n}","map":{"version":3,"sources":["C:/Users/Eman/source/repos/emancurmi/joymooncraftsapp/src/components/Swiper.js"],"names":["ReactIdSwiper","Container","Row","Col","Button","Swiper","props","breakpoints","sm","slidesPerView","md","lg","xl","xxl","xxxl","params","containerClass","className","effect","allowTouchMove","spaceBetween","centeredSlides","roundLengths","loop","speed","parallax","autoplay","delay","pagination","el","paginationClass","clickable","dynamicBullets","navigation","nextEl","navigationColor","prevEl","wrapperClass","data","map","slide","index","itemclass","columns","bgdirection","darkOverlay","style","backgroundImage","img","containerFluid","containerclass","containerStyle","rowclass","size","offset","contentoffset","contentclass","subtitle","subtitleclass","titleclass","lineHeight","name","text","link","button"],"mappings":"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","sourcesContent":["import ReactIdSwiper from \"react-id-swiper\";\r\nimport { Container, Row, Col, Button } from \"reactstrap\";\r\n\r\nexport default function Swiper(props) {\r\n  const breakpoints = [];\r\n  if (props.sm) {\r\n    breakpoints[565] = {\r\n      slidesPerView: props.sm,\r\n    };\r\n  }\r\n  if (props.md) {\r\n    breakpoints[768] = {\r\n      slidesPerView: props.md,\r\n    };\r\n  }\r\n  if (props.lg) {\r\n    breakpoints[991] = {\r\n      slidesPerView: props.lg,\r\n    };\r\n  }\r\n  if (props.xl) {\r\n    breakpoints[1200] = {\r\n      slidesPerView: props.xl,\r\n    };\r\n  }\r\n  if (props.xxl) {\r\n    breakpoints[1400] = {\r\n      slidesPerView: props.xxl,\r\n    };\r\n  }\r\n  if (props.xxxl) {\r\n    breakpoints[1600] = {\r\n      slidesPerView: props.xxxl,\r\n    };\r\n  }\r\n  const params = {\r\n    containerClass: `swiper-container ${\r\n      props.className ? props.className : \"\"\r\n    }`,\r\n    slidesPerView: props.slidesPerView,\r\n    effect: props.effect,\r\n    allowTouchMove: props.allowTouchMove === false ? false : true,\r\n    spaceBetween: props.spaceBetween,\r\n    centeredSlides: props.centeredSlides,\r\n    roundLengths: props.roundLengths,\r\n    loop: props.loop,\r\n    speed: props.speed ? props.speed : 400,\r\n    parallax: props.parallax,\r\n    breakpoints: breakpoints,\r\n    autoplay: props.autoplay\r\n      ? {\r\n          delay: props.delay,\r\n        }\r\n      : false,\r\n    pagination:\r\n      props.pagination !== false\r\n        ? {\r\n            el: `.swiper-pagination.${props.paginationClass}`,\r\n            clickable: true,\r\n            dynamicBullets: true,\r\n          }\r\n        : false,\r\n    navigation: {\r\n      nextEl: props.navigation\r\n        ? `.swiper-button-next.swiper-button-${\r\n            props.navigationColor ? props.navigationColor : \"white\"\r\n          }.swiper-nav.d-none.d-lg-block`\r\n        : \"\",\r\n      prevEl: props.navigation\r\n        ? `.swiper-button-prev.swiper-button-${\r\n            props.navigationColor ? props.navigationColor : \"white\"\r\n          }.swiper-nav.d-none.d-lg-block`\r\n        : \"\",\r\n    },\r\n    wrapperClass: `swiper-wrapper ${\r\n      props.wrapperClass ? props.wrapperClass : \"\"\r\n    }`,\r\n  };\r\n  return props.data ? (\r\n    <ReactIdSwiper {...params}>\r\n      {props.data.map((slide, index) => (\r\n        <div\r\n          key={index}\r\n          className={`${slide.itemclass ? slide.itemclass : \"\"} ${\r\n            !props.columns ? \"bg-cover\" : \"\"\r\n          } ${slide.bgdirection ? `bg-cover-${slide.bgdirection}` : \"\"} ${\r\n            slide.darkOverlay ? `dark-overlay` : \"\"\r\n          }`}\r\n          style={{\r\n            ...props.style,\r\n            backgroundImage: !props.columns ? `url(${slide.img})` : `none`,\r\n          }}\r\n        >\r\n          <Container\r\n            fluid={props.containerFluid}\r\n            className={`h-100 ${!props.columns ? \"px-lg-6\" : \"\"} ${\r\n              props.containerclass ? props.containerclass : \"\"\r\n            }`}\r\n            style={slide.containerStyle}\r\n          >\r\n            <Row\r\n              className={`overlay-content h-100 align-items-center ${\r\n                slide.rowclass ? slide.rowclass : \"\"\r\n              }`}\r\n              data-swiper-parallax=\"-500\"\r\n            >\r\n              <Col\r\n                lg={{\r\n                  size: props.columns ? 8 : 6,\r\n                  offset: slide.contentoffset,\r\n                }}\r\n                className={slide.contentclass ? slide.contentclass : \"\"}\r\n              >\r\n                {slide.subtitle && (\r\n                  <p\r\n                    className={`subtitle letter-spacing-${\r\n                      props.columns ? 5 : 3\r\n                    } font-weight-light ${\r\n                      slide.subtitleclass ? slide.subtitleclass : \"\"\r\n                    }`}\r\n                  >\r\n                    {slide.subtitle}\r\n                  </p>\r\n                )}\r\n                <h2\r\n                  className={slide.titleclass ? slide.titleclass : \"\"}\r\n                  style={{ lineHeight: \"1\" }}\r\n                >\r\n                  {slide.name}\r\n                </h2>\r\n                {slide.text && (\r\n                  <p\r\n                    className={`${props.columns ? \"text-muted\" : \"lead\"}  mb-5`}\r\n                  >\r\n                    {slide.text}\r\n                  </p>\r\n                )}\r\n                <Button\r\n                  color={props.columns ? \"outline-dark\" : \"light\"}\r\n                  href={slide.link}\r\n                >\r\n                  {slide.button}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      ))}\r\n    </ReactIdSwiper>\r\n  ) : (\r\n    \"loading\"\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}