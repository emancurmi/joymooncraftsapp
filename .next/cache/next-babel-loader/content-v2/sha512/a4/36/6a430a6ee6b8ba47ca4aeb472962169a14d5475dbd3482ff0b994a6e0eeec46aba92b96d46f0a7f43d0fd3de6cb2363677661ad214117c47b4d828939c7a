{"ast":null,"code":"import _extends from \"C:/Users/Eman/source/repos/emancurmi/joymooncraftsapp/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { useState, useRef } from \"react\";\nimport Lightbox from \"react-image-lightbox\";\nimport Magnifier from \"react-magnifier\";\nimport { Row, Col, Button } from \"reactstrap\";\nimport ReactIdSwiper from \"react-id-swiper\";\n\nvar SwiperGallery = function SwiperGallery(_ref) {\n  var data = _ref.data,\n      vertical = _ref.vertical;\n\n  var _useState = useState(false),\n      lightBoxOpen = _useState[0],\n      setLightBoxOpen = _useState[1];\n\n  var _useState2 = useState(0),\n      activeImage = _useState2[0],\n      setActiveImage = _useState2[1];\n\n  var _useState3 = useState(0),\n      activeSlide = _useState3[0],\n      setActiveSlide = _useState3[1];\n\n  var gallerySwiperRef = useRef(null);\n\n  var slideTo = function slideTo(index) {\n    setActiveSlide(index);\n\n    if (gallerySwiperRef.current !== null && gallerySwiperRef.current.swiper !== null) {\n      gallerySwiperRef.current.swiper.slideToLoop(index);\n    }\n  };\n\n  var _onClick = function onClick(index) {\n    setActiveImage(index);\n    setLightBoxOpen(!lightBoxOpen);\n  };\n\n  var sliderColumns = {\n    xs: 12\n  },\n      sliderClass = \"detail-carousel\",\n      thumbsColumns = {\n    xs: 12\n  },\n      thumbsClass = \"\";\n\n  if (vertical) {\n    sliderColumns = {\n      xs: 12,\n      md: 10\n    };\n    sliderClass = \"detail-carousel order-md-2\", thumbsColumns = {\n      md: 2\n    };\n    thumbsClass = \"d-none d-md-block pr-0 order-md-1\";\n  }\n\n  var sliderParams = {\n    slidesPerView: 1,\n    spaceBetween: 0,\n    loop: true,\n    on: {\n      slideChange: function slideChange() {\n        return setActiveSlide(gallerySwiperRef.current.swiper.realIndex);\n      }\n    }\n  };\n  var customStyles = {\n    overlay: {\n      zIndex: \"1000\"\n    },\n    bodyOpen: {\n      position: \"fixed\"\n    }\n  };\n  return __jsx(React.Fragment, null, __jsx(Row, null, __jsx(Col, _extends({\n    className: sliderClass\n  }, sliderColumns), __jsx(\"div\", {\n    className: \"ribbon ribbon-info\"\n  }, \"Fresh\"), __jsx(\"div\", {\n    className: \"ribbon ribbon-primary\"\n  }, \"Sale\"), __jsx(ReactIdSwiper, _extends({}, sliderParams, {\n    ref: gallerySwiperRef\n  }), data.map(function (item, index) {\n    return __jsx(\"div\", {\n      key: index\n    }, __jsx(Magnifier, {\n      mgShowOverflow: false,\n      mgWidth: 2000,\n      mgHeight: 2000,\n      className: \"img-fluid\",\n      src: item.img,\n      alt: item.alt,\n      zoomFactor: 0.11,\n      style: {\n        cursor: \"default\"\n      }\n    }), __jsx(Button, {\n      color: \"expand\",\n      onClick: function onClick() {\n        return _onClick(index);\n      }\n    }, __jsx(\"svg\", {\n      className: \"svg-icon\"\n    }, __jsx(\"use\", {\n      xlinkHref: \"/icons/orion-svg-sprite.svg#expand-1\"\n    }))));\n  }))), __jsx(Col, _extends({\n    className: thumbsClass\n  }, thumbsColumns), data.map(function (item, index) {\n    return __jsx(\"button\", {\n      key: index,\n      onClick: function onClick() {\n        return slideTo(index);\n      },\n      className: \"detail-thumb-item mb-3 \".concat(activeSlide === index ? \"active\" : \"\")\n    }, __jsx(\"img\", {\n      className: \"img-fluid\",\n      src: item.img,\n      alt: item.alt\n    }));\n  })), lightBoxOpen && __jsx(Lightbox, {\n    mainSrc: data[activeImage].img,\n    nextSrc: data[(activeImage + 1) % data.length].img,\n    prevSrc: data[(activeImage + data.length - 1) % data.length].img,\n    onCloseRequest: function onCloseRequest() {\n      return setLightBoxOpen(false);\n    },\n    imageCaption: data[activeImage].caption,\n    onMovePrevRequest: function onMovePrevRequest() {\n      return setActiveImage((activeImage + data.length - 1) % data.length);\n    },\n    onMoveNextRequest: function onMoveNextRequest() {\n      return setActiveImage((activeImage + 1) % data.length);\n    },\n    enableZoom: false,\n    reactModalStyle: customStyles\n  })));\n};\n\nexport default SwiperGallery;","map":null,"metadata":{},"sourceType":"module"}