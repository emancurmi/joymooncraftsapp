{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport Select from \"react-select\";\n\nconst SelectBox = ({\n  options\n}) => {\n  const customSelectStyles = {\n    control: (provided, state) => _objectSpread(_objectSpread({}, provided), {}, {\n      border: \"1px solid #ced4da\",\n      borderRadius: \"0\",\n      width: 200,\n      cursor: \"pointer\",\n      height: 30,\n      minHeight: 30,\n      fontSize: 13\n    }),\n    dropdownIndicator: provided => _objectSpread(_objectSpread({}, provided), {}, {\n      paddingTop: 0,\n      paddingBottom: 0\n    }),\n    indicatorSeparator: (provided, state) => ({\n      display: \"none\"\n    }),\n    menu: (provided, state) => _objectSpread(_objectSpread({}, provided), {}, {\n      color: \"#343a40\",\n      border: \"0 solid #fff\",\n      borderRadius: 0,\n      boxShadow: \"0 0 1.2rem rgba(0, 0, 0, .15)\",\n      zIndex: 10\n    }),\n    option: (provided, {\n      data,\n      isDisabled,\n      isFocused,\n      isSelected\n    }) => _objectSpread(_objectSpread({}, provided), {}, {\n      backgroundColor: isDisabled ? null : isSelected ? \"#3494E6\" : isFocused ? \"#eee\" : null,\n      \":active\": _objectSpread(_objectSpread({}, provided[\":active\"]), {}, {\n        backgroundColor: \"#3494E6\"\n      }),\n      cursor: \"pointer\"\n    })\n  };\n  return __jsx(Select, {\n    options: options,\n    autosize: true,\n    defaultValue: options[0],\n    className: \"react-select-container\",\n    classNamePrefix: \"react-select\",\n    styles: customSelectStyles,\n    isSearchable: false\n  });\n};\n\nexport default SelectBox;","map":null,"metadata":{},"sourceType":"module"}