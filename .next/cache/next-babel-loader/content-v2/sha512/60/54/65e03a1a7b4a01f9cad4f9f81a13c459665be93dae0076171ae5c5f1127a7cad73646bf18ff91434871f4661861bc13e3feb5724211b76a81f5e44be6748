{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState } from \"react\";\nimport Link from \"next/link\";\nimport Image from \"./CustomImage\";\nimport ModalQuickView from \"./ModalQuickView\";\n\nconst Product = (_ref) => {\n  let {\n    data,\n    masonry\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"data\", \"masonry\"]);\n\n  const {\n    0: quickView,\n    1: setQuickView\n  } = useState(false);\n  let loading = \"lazy\";\n\n  if (props.loading) {\n    loading = props.loading;\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"product\"\n  }, __jsx(\"div\", {\n    className: \"product-image\"\n  }, data.new && __jsx(\"div\", {\n    className: \"ribbon ribbon-info\"\n  }, \"Fresh\"), data.sale && __jsx(\"div\", {\n    className: \"ribbon ribbon-primary\"\n  }, \"Sale\"), data.soldout && __jsx(\"div\", {\n    className: \"ribbon ribbon-danger\"\n  }, \"Sold out\"), typeof data.img === \"object\" && (masonry ? __jsx(\"img\", {\n    className: \"img-fluid\",\n    src: data.img.masonry[0].img,\n    alt: data.img.masonry[0].alt\n  }) : __jsx(Image, {\n    className: \"img-fluid\",\n    src: data.img.category[0].img,\n    alt: data.img.category[0].alt,\n    width: 530,\n    height: 795,\n    sizes: \"(max-width: 576px) 100vw, 530px\",\n    loading: \"eager\"\n  })), __jsx(\"div\", {\n    className: \"product-hover-overlay\"\n  }, __jsx(Link, {\n    href: data.link\n  }, __jsx(\"a\", {\n    className: \"product-hover-overlay-link\"\n  })), __jsx(\"div\", {\n    className: \"product-hover-overlay-buttons\"\n  }, !props.onlyViewButton && __jsx(\"a\", {\n    className: \"btn btn-outline-dark btn-product-left\",\n    href: \"#\"\n  }, __jsx(\"i\", {\n    className: \"fa fa-shopping-cart\"\n  })), __jsx(Link, {\n    href: data.link\n  }, __jsx(\"a\", {\n    className: \"btn btn-dark btn-buy\"\n  }, __jsx(\"i\", {\n    className: \"fa-search fa\"\n  }), __jsx(\"span\", {\n    className: \"btn-buy-label ml-2\"\n  }, \"View\"))), !props.onlyViewButton && __jsx(\"a\", {\n    className: \"btn btn-outline-dark btn-product-right\",\n    onClick: () => setQuickView(!quickView)\n  }, __jsx(\"i\", {\n    className: \"fa fa-expand-arrows-alt\"\n  }))))), __jsx(\"div\", {\n    className: \"py-2\"\n  }, data.category && __jsx(\"p\", {\n    className: \"text-muted text-sm mb-1\"\n  }, data.category[0].title), __jsx(\"h3\", {\n    className: \"h6 text-uppercase mb-1\"\n  }, __jsx(Link, {\n    href: data.link\n  }, __jsx(\"a\", {\n    className: \"text-dark\"\n  }, data.name))), __jsx(\"span\", {\n    className: \"text-muted\"\n  }, \"$\", data.price.toFixed(2)))), props.showQuickView !== false && __jsx(ModalQuickView, {\n    isOpen: quickView,\n    toggle: () => setQuickView(),\n    product: data\n  }));\n};\n\nexport default Product;","map":null,"metadata":{},"sourceType":"module"}