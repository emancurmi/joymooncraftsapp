{"ast":null,"code":"import _defineProperty from \"C:/Users/Eman/source/repos/emancurmi/joymooncraftsapp/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:/Users/Eman/source/repos/emancurmi/joymooncraftsapp/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { tomorrow } from 'react-syntax-highlighter/dist/cjs/styles/prism';\nimport { Card, CardBody, Button, Tooltip } from 'reactstrap';\n\nvar Tooltips = function Tooltips() {\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      tooltipActive = _React$useState2[0],\n      setTooltipActive = _React$useState2[1];\n\n  var _toggle = function toggle(name) {\n    setTooltipActive(_objectSpread(_objectSpread({}, tooltipActive), {}, _defineProperty({}, name, !tooltipActive[name])));\n  };\n\n  return __jsx(\"div\", {\n    id: \"tooltips\",\n    className: \"docs-item element\"\n  }, __jsx(\"h5\", {\n    className: \"text-uppercase mb-4\"\n  }, \"Tooltips\"), __jsx(\"div\", {\n    className: \"docs-desc\"\n  }, __jsx(\"p\", {\n    className: \"lead\"\n  }, \"Custom Bootstrap tooltips with CSS and JavaScript using CSS3 for animations and data-attributes for local title storage. See the \", __jsx(\"a\", {\n    href: \"https://reactstrap.github.io/components/tooltips/\"\n  }, \"ReactStrap documentation\"), \" for more details. \")), __jsx(\"div\", {\n    className: \"mt-5\"\n  }, __jsx(Card, null, __jsx(CardBody, null, __jsx(Button, {\n    color: \"outline-dark\",\n    className: \"mr-1 mb-2\",\n    id: \"Tooltip1\"\n  }, \"Tooltip on top\"), __jsx(Tooltip, {\n    placement: \"top\",\n    isOpen: tooltipActive[\"tooltip-1\"],\n    target: \"Tooltip1\",\n    toggle: function toggle() {\n      return _toggle(\"tooltip-1\");\n    }\n  }, \"Tooltip on top\"), __jsx(Button, {\n    color: \"outline-dark\",\n    className: \"mr-1 mb-2\",\n    id: \"Tooltip2\"\n  }, \"Tooltip on right\"), __jsx(Tooltip, {\n    placement: \"right\",\n    isOpen: tooltipActive[\"tooltip-2\"],\n    target: \"Tooltip2\",\n    toggle: function toggle() {\n      return _toggle(\"tooltip-2\");\n    }\n  }, \"Tooltip on right\"), __jsx(Button, {\n    color: \"outline-dark\",\n    className: \"mr-1 mb-2\",\n    id: \"Tooltip3\"\n  }, \"Tooltip on bottom\"), __jsx(Tooltip, {\n    placement: \"bottom\",\n    isOpen: tooltipActive[\"tooltip-3\"],\n    target: \"Tooltip3\",\n    toggle: function toggle() {\n      return _toggle(\"tooltip-3\");\n    }\n  }, \"Tooltip on bottom\"), __jsx(Button, {\n    color: \"outline-dark\",\n    className: \"mr-1 mb-2\",\n    id: \"Tooltip4\"\n  }, \"Tooltip on left\"), __jsx(Tooltip, {\n    placement: \"left\",\n    isOpen: tooltipActive[\"tooltip-4\"],\n    target: \"Tooltip4\",\n    toggle: function toggle() {\n      return _toggle(\"tooltip-4\");\n    }\n  }, \"Tooltip on left\")))), __jsx(\"div\", {\n    className: \"mt-4\"\n  }, __jsx(SyntaxHighlighter, {\n    language: \"javascript\",\n    style: tomorrow,\n    className: \"rounded shadow p-4\"\n  }, highlightCode)));\n};\n\nexport default Tooltips;\nvar highlightCode = \"import { Button, Tooltip } from 'reactstrap'\\n\\nconst Component = () => {\\n    const [open, setOpen] = React.useState(false)\\n\\n    return (\\n        <>\\n            <Button id=\\\"Tooltip1\\\">Tooltip on top</Button>\\n            <Tooltip\\n                placement=\\\"top\\\"\\n                isOpen={open}\\n                target=\\\"Tooltip1\\\"\\n                toggle={() => setOpen(!open)}\\n            >\\n                Tooltip on top\\n            </Tooltip>\\n        </>\\n    )\\n}\\n\\nexport default Component\\n\";","map":null,"metadata":{},"sourceType":"module"}