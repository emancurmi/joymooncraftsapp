{"ast":null,"code":"import _defineProperty from \"C:/Users/Eman/source/repos/emancurmi/joymooncraftsapp/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:/Users/Eman/source/repos/emancurmi/joymooncraftsapp/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Eman\\\\source\\\\repos\\\\emancurmi\\\\joymooncraftsapp\\\\src\\\\components\\\\Header.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Link from \"next/link\";\nimport Router from \"next/router\";\nimport { Collapse, Navbar, NavbarToggler, Nav, NavItem, NavLink, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Container, Row, Col, Badge } from \"reactstrap\";\nimport UseWindowSize from \"../hooks/UseWindowSize\";\nimport useScrollPosition from \"@react-hook/window-scroll\";\nimport useSize from \"@react-hook/size\";\nimport Logo from \"../../public/svg/logo.svg\";\nimport ActiveLink from \"./ActiveLink\";\nimport CartOverviewDropdown from \"./CartOverviewDropdown\";\nimport menu from \"../data/menu.json\";\nimport userMenu from \"../data/user-menu.json\";\n\nvar Header = function Header(props) {\n  _s();\n\n  var _useState = useState(false),\n      collapsed = _useState[0],\n      setCollapsed = _useState[1];\n\n  var _useState2 = useState({}),\n      dropdownOpen = _useState2[0],\n      setDropdownOpen = _useState2[1];\n\n  var _useState3 = useState(false),\n      searchToggle = _useState3[0],\n      setSearchToggle = _useState3[1];\n\n  var _useState4 = useState(false),\n      searchFocus = _useState4[0],\n      setSearchFocus = _useState4[1];\n\n  var _useState5 = useState(false),\n      parentName = _useState5[0],\n      setParentName = _useState5[1];\n\n  var _useState6 = useState(\"\"),\n      additionalNavClasses = _useState6[0],\n      setAdditionalNavClasses = _useState6[1];\n\n  var size = UseWindowSize();\n  var scrollY = useScrollPosition();\n  var navbarRef = useRef(null);\n  var topbarRef = useRef(null);\n\n  var _useSize = useSize(topbarRef),\n      _useSize2 = _slicedToArray(_useSize, 2),\n      topbarWidth = _useSize2[0],\n      topbarHeight = _useSize2[1];\n\n  var _useSize3 = useSize(navbarRef),\n      _useSize4 = _slicedToArray(_useSize3, 2),\n      navbarWidth = _useSize4[0],\n      navbarHeight = _useSize4[1];\n\n  var onFocus = function onFocus() {\n    return setSearchFocus(!searchFocus);\n  };\n\n  var toggleDropdown = function toggleDropdown(name) {\n    setDropdownOpen(_objectSpread(_objectSpread({}, dropdownOpen), {}, _defineProperty({}, name, !dropdownOpen[name])));\n  };\n\n  var onLinkClick = function onLinkClick(parent) {\n    size.width < 991 && setCollapsed(!collapsed);\n    setParentName(parent);\n  };\n\n  var makeNavbarSticky = function makeNavbarSticky() {\n    if (props.nav.sticky !== false) {\n      if (scrollY > topbarHeight) {\n        setAdditionalNavClasses(\"fixed-top\");\n        navbarHeight > 0 && props.headerAbsolute !== true && props.setPaddingTop(navbarHeight);\n      } else {\n        setAdditionalNavClasses(\"\");\n        props.setPaddingTop(0);\n      }\n    } else {\n      setAdditionalNavClasses(\"\");\n      props.setPaddingTop(0);\n    }\n  };\n\n  useEffect(function () {\n    makeNavbarSticky();\n  }, [scrollY, topbarHeight]); // highlight not only active dropdown item, but also its parent, i.e. dropdown toggle\n\n  var highlightDropdownParent = function highlightDropdownParent() {\n    menu.map(function (item) {\n      item.dropdown && item.dropdown.map(function (dropdownLink) {\n        dropdownLink.link && dropdownLink.link === Router.route && setParentName(item.title);\n        dropdownLink.links && dropdownLink.links.map(function (link) {\n          return link.link === Router.route && setParentName(item.title);\n        });\n      });\n      item.megamenu && item.megamenu.map(function (megamenuColumn) {\n        return megamenuColumn.map(function (megamenuBlock) {\n          return megamenuBlock.links.map(function (dropdownLink) {\n            if (dropdownLink.link === Router.route) {\n              dropdownLink.parent ? setParentName(dropdownLink.parent) : setParentName(item.title);\n            }\n          });\n        });\n      });\n      item.link === Router.route && setParentName(item.title);\n    });\n  };\n\n  useEffect(highlightDropdownParent, []);\n  return __jsx(\"header\", {\n    className: \"header \".concat(props.headerClasses ? props.headerClasses : \"\", \" \").concat(props.headerAbsolute ? \"header-absolute\" : \"\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, !props.hideTopbar && __jsx(\"div\", {\n    className: \"top-bar\",\n    ref: topbarRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, __jsx(Container, {\n    fluid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, __jsx(Row, {\n    className: \"d-flex align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    sm: \"7\",\n    className: \"d-none d-sm-block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, __jsx(\"ul\", {\n    className: \"list-inline mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, __jsx(\"li\", {\n    className: \"list-inline-item pr-3 mr-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }, __jsx(\"svg\", {\n    className: \"svg-icon mr-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, __jsx(\"use\", {\n    xlinkHref: \"/icons/orion-svg-sprite.svg#calls-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 23\n    }\n  })), \"020-800-456-747\"), __jsx(\"li\", {\n    className: \"list-inline-item px-3 border-left d-none d-lg-inline-block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }, \"Free shipping on orders over $300\"))), __jsx(Col, {\n    sm: \"5\",\n    className: \"d-flex justify-content-end\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, __jsx(Dropdown, {\n    className: \"border-right px-3\",\n    key: \"language_dropdown\",\n    isOpen: dropdownOpen[\"language_dropdown\"],\n    toggle: function toggle() {\n      return toggleDropdown(\"language_dropdown\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, __jsx(DropdownToggle, {\n    caret: true,\n    tag: \"a\",\n    href: \"#\",\n    className: \"topbar-link\",\n    id: \"langsDropdown\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 19\n    }\n  }, __jsx(\"img\", {\n    className: \"topbar-flag\",\n    src: \"/svg/united-kingdom.svg\",\n    alt: \"english\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }), \"English\"), __jsx(DropdownMenu, {\n    right: true,\n    \"aria-labelledby\": \"langsDropdown\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 19\n    }\n  }, __jsx(DropdownItem, {\n    className: \"text-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    className: \"topbar-flag\",\n    src: \"/svg/germany.svg\",\n    alt: \"german\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 23\n    }\n  }), \"German\"), __jsx(DropdownItem, {\n    className: \"text-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    className: \"topbar-flag\",\n    src: \"/svg/france.svg\",\n    alt: \"french\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 23\n    }\n  }), \"French\"))), __jsx(Dropdown, {\n    className: \"pl-3 ml-0\",\n    key: \"currency_dropdown\",\n    isOpen: dropdownOpen[\"currency_dropdown\"],\n    toggle: function toggle() {\n      return toggleDropdown(\"currency_dropdown\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, __jsx(DropdownToggle, {\n    caret: true,\n    tag: \"a\",\n    href: \"#\",\n    className: \"topbar-link\",\n    id: \"currencyDropdown\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 19\n    }\n  }, \"USD\"), __jsx(DropdownMenu, {\n    right: true,\n    \"aria-labelledby\": \"currencyDropdown\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }\n  }, __jsx(DropdownItem, {\n    className: \"text-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, \"EUR\"), __jsx(DropdownItem, {\n    className: \"text-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, \"GBP\"))))))), __jsx(\"div\", {\n    ref: navbarRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }, __jsx(Navbar, {\n    color: props.nav.color ? Object.values(dropdownOpen).some(function (dropdown) {\n      return dropdown;\n    }) || collapsed ? \"white\" : props.nav.color : \"white\",\n    light: props.nav.light || Object.values(dropdownOpen).some(function (dropdown) {\n      return dropdown;\n    }) || collapsed,\n    dark: props.nav.dark && !Object.values(dropdownOpen).some(function (dropdown) {\n      return dropdown;\n    }) && !collapsed,\n    fixed: props.nav.fixed ? props.nav.fixed : \"\",\n    expand: \"lg\",\n    className: \" \".concat(props.nav.classes ? props.nav.classes : \"navbar-sticky bg-fixed-white\", \" \").concat(additionalNavClasses ? additionalNavClasses : \"\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }, __jsx(Container, {\n    fluid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    passHref: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    className: \"py-1 navbar-brand\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 15\n    }\n  }, __jsx(Logo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }))), __jsx(NavbarToggler, {\n    onClick: function onClick() {\n      return setCollapsed(!collapsed);\n    },\n    className: \"navbar-toggler-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  }, __jsx(\"i\", {\n    className: \"fa fa-bars\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  })), __jsx(Collapse, {\n    isOpen: collapsed,\n    navbar: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }, __jsx(Nav, {\n    navbar: true,\n    className: \"mx-auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 15\n    }\n  }, menu && menu.map(function (item) {\n    return item.dropdown || item.megamenu ? // show entire menu to unlogged user or hide items that have hideToLoggedUser set to true\n    !props.loggedUser || props.loggedUser && !item.hideToLoggedUser ? __jsx(Dropdown, {\n      nav: true,\n      inNavbar: true,\n      key: item.title,\n      className: item.position ? \"position-\".concat(item.position) : \"\",\n      isOpen: dropdownOpen[item.title],\n      toggle: function toggle() {\n        return toggleDropdown(item.title);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 25\n      }\n    }, __jsx(DropdownToggle, {\n      nav: true,\n      caret: true,\n      className: parentName === item.title ? \"active\" : \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 27\n      }\n    }, item.title), __jsx(DropdownMenu, {\n      className: \" \".concat(item.megamenu ? \"megamenu py-lg-0\" : \"\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 27\n      }\n    }, item.dropdown && item.dropdown.map(function (dropdownItem) {\n      return dropdownItem.links ? __jsx(React.Fragment, {\n        key: dropdownItem.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 35\n        }\n      }, dropdownItem.divider && __jsx(DropdownItem, {\n        divider: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 39\n        }\n      }), __jsx(\"h6\", {\n        className: \"dropdown-header font-weight-normal\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 37\n        }\n      }, dropdownItem.title), dropdownItem.links.map(function (link) {\n        return __jsx(ActiveLink, {\n          key: link.title,\n          activeClassName: \"active\",\n          href: link.link,\n          passHref: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 39\n          }\n        }, __jsx(DropdownItem, {\n          onClick: function onClick() {\n            return onLinkClick(item.title);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 41\n          }\n        }, link.title, link[\"new\"] && __jsx(Badge, {\n          color: \"warning\",\n          className: \"ml-1 mt-n1\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 45\n          }\n        }, \"New\")));\n      })) : __jsx(ActiveLink, {\n        key: dropdownItem.title,\n        activeClassName: \"active\",\n        href: dropdownItem.link,\n        passHref: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 35\n        }\n      }, __jsx(DropdownItem, {\n        onClick: function onClick() {\n          return onLinkClick(item.title);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 37\n        }\n      }, dropdownItem.title, dropdownItem[\"new\"] && __jsx(Badge, {\n        color: \"warning\",\n        className: \"ml-1 mt-n1\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 41\n        }\n      }, \"New\")));\n    }), item.megamenu && __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 31\n      }\n    }, __jsx(Col, {\n      lg: \"9\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 33\n      }\n    }, __jsx(Row, {\n      className: \"p-3 pr-lg-0 pl-lg-5 pt-lg-5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 35\n      }\n    }, item.megamenu.map(function (megamenuItem, index) {\n      return __jsx(Col, {\n        key: index,\n        lg: \"3\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 41\n        }\n      }, megamenuItem.map(function (block, index) {\n        return __jsx(React.Fragment, {\n          key: index,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 45\n          }\n        }, __jsx(\"h6\", {\n          className: \"text-uppercase\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 47\n          }\n        }, block.title), __jsx(\"ul\", {\n          className: \"megamenu-list list-unstyled\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 47\n          }\n        }, block.links.map(function (link, index) {\n          return __jsx(\"li\", {\n            key: index,\n            className: \"megamenu-list-item\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 53\n            }\n          }, __jsx(ActiveLink, {\n            activeClassName: \"active\",\n            href: link.link,\n            as: link.as,\n            passHref: true,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 55\n            }\n          }, __jsx(DropdownItem, {\n            className: \"megamenu-list-link\",\n            onClick: function onClick() {\n              return link.parent ? onLinkClick(link.parent) : onLinkClick(item.title);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 57\n            }\n          }, link.title, link[\"new\"] && __jsx(Badge, {\n            color: \"warning\",\n            className: \"ml-1 mt-n1\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 61\n            }\n          }, \"New\"))));\n        })));\n      }));\n    })), item.services && __jsx(Row, {\n      className: \"megamenu-services d-none d-lg-flex pl-lg-5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 37\n      }\n    }, item.services.map(function (service) {\n      return __jsx(Col, {\n        key: service.title,\n        xl: \"3\",\n        lg: \"6\",\n        className: \"d-flex\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 41\n        }\n      }, __jsx(\"div\", {\n        className: \"megamenu-services-item\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 43\n        }\n      }, __jsx(\"svg\", {\n        className: \"svg-icon megamenu-services-icon\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 45\n        }\n      }, __jsx(\"use\", {\n        xlinkHref: service.icon,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 47\n        }\n      })), __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 45\n        }\n      }, __jsx(\"h6\", {\n        className: \"text-uppercase\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 47\n        }\n      }, service.title), __jsx(\"p\", {\n        className: \"mb-0 text-muted text-sm\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 47\n        }\n      }, service.content))));\n    }))), item.image && __jsx(Col, {\n      lg: \"3\",\n      className: \"d-none d-lg-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 35\n      }\n    }, __jsx(\"img\", {\n      src: item.image,\n      alt: \"\",\n      className: \"bg-image\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 37\n      }\n    }))))) : \"\" : props.loggedUser && !item.hideToLoggedUser || !props.loggedUser ? __jsx(NavItem, {\n      key: item.title,\n      className: item.button ? \"mt-3 mt-lg-0 ml-lg-3 d-lg-none d-xl-inline-block\" : \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 23\n      }\n    }, item.button ? item.showToLoggedUser !== false && __jsx(ActiveLink, {\n      activeClassName: \"active\",\n      href: item.link,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 29\n      }\n    }, __jsx(\"a\", {\n      className: \"btn btn-primary\",\n      onClick: function onClick() {\n        return onLinkClick(item.title);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 31\n      }\n    }, item.title)) : __jsx(ActiveLink, {\n      activeClassName: \"active\",\n      href: item.link,\n      passHref: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 27\n      }\n    }, __jsx(NavLink, {\n      onClick: function onClick() {\n        return onLinkClick(item.title);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 29\n      }\n    }, item.title))) : \"\";\n  })), __jsx(\"div\", {\n    className: \"d-flex align-items-center justify-content-between justify-content-lg-end mt-1 mb-2 my-lg-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"nav-item navbar-icon-link\",\n    \"data-toggle\": \"search\",\n    onClick: function onClick() {\n      return setSearchToggle(!searchToggle);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 17\n    }\n  }, __jsx(\"svg\", {\n    className: \"svg-icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 19\n    }\n  }, __jsx(\"use\", {\n    xlinkHref: \"/icons/orion-svg-sprite.svg#search-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 21\n    }\n  }))), props.loggedUser ? userMenu.map(function (item) {\n    return __jsx(Dropdown, {\n      nav: true,\n      inNavbar: true,\n      key: item.title,\n      tag: \"div\",\n      className: item.type === \"avatar\" ? \"navbar-icon-link mt-n1 py-0\" : \"\",\n      isOpen: dropdownOpen[item.title],\n      toggle: function toggle() {\n        return toggleDropdown(item.title);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 21\n      }\n    }, __jsx(DropdownToggle, {\n      nav: true,\n      style: item.type === \"avatar\" && {\n        padding: 0\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 23\n      }\n    }, item.type === \"avatar\" ? __jsx(\"img\", {\n      src: item.img,\n      alt: item.title,\n      className: \"avatar avatar-sm avatar-border-white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 27\n      }\n    }) : item.title), __jsx(DropdownMenu, {\n      right: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 23\n      }\n    }, item.dropdown && item.dropdown.map(function (dropdownItem, dropdownIndex) {\n      return dropdownItem.divider ? __jsx(DropdownItem, {\n        key: dropdownIndex,\n        divider: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 31\n        }\n      }) : __jsx(ActiveLink, {\n        key: dropdownIndex,\n        activeClassName: \"active\",\n        href: dropdownItem.link,\n        passHref: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 31\n        }\n      }, __jsx(DropdownItem, {\n        onClick: function onClick() {\n          return onLinkClick(item.title);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 33\n        }\n      }, dropdownItem.title));\n    })));\n  }) : __jsx(\"div\", {\n    className: \"nav-item\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 19\n    }\n  }, __jsx(Link, {\n    href: \"/customer-login\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    className: \"navbar-icon-link\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 23\n    }\n  }, __jsx(\"svg\", {\n    className: \"svg-icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 25\n    }\n  }, __jsx(\"use\", {\n    xlinkHref: \"/icons/orion-svg-sprite.svg#male-user-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 27\n    }\n  })), __jsx(\"span\", {\n    className: \"text-sm ml-2 ml-lg-0 text-uppercase text-sm font-weight-bold d-none d-sm-inline d-lg-none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 25\n    }\n  }, \"Log in\")))), __jsx(CartOverviewDropdown, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 17\n    }\n  })))))), searchToggle && __jsx(\"div\", {\n    className: \"search-area-wrapper\",\n    style: {\n      display: \"block\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"search-area d-flex align-items-center justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"close-btn\",\n    onClick: function onClick() {\n      return setSearchToggle(!searchToggle);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 13\n    }\n  }, __jsx(\"svg\", {\n    className: \"svg-icon svg-icon-light w-3rem h-3rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 15\n    }\n  }, __jsx(\"use\", {\n    xlinkHref: \"/icons/orion-svg-sprite.svg#close-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 17\n    }\n  }, \" \"))), __jsx(\"form\", {\n    className: \"search-area-form\",\n    action: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group position-relative\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 15\n    }\n  }, __jsx(\"input\", {\n    className: \"search-area-input\",\n    type: \"search\",\n    name: \"search\",\n    id: \"search\",\n    autoFocus: true,\n    placeholder: \"What are you looking for?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    className: \"search-area-button\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 17\n    }\n  }, __jsx(\"svg\", {\n    className: \"svg-icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 19\n    }\n  }, __jsx(\"use\", {\n    xlinkHref: \"/icons/orion-svg-sprite.svg#search-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 21\n    }\n  }))))))));\n};\n\n_s(Header, \"Lg3f+ZNUaFvd5bu5Dz4AFuWgy9c=\", false, function () {\n  return [useScrollPosition, useSize, useSize];\n});\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/Eman/source/repos/emancurmi/joymooncraftsapp/src/components/Header.js"],"names":["React","useState","useEffect","useRef","Link","Router","Collapse","Navbar","NavbarToggler","Nav","NavItem","NavLink","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Container","Row","Col","Badge","UseWindowSize","useScrollPosition","useSize","Logo","ActiveLink","CartOverviewDropdown","menu","userMenu","Header","props","collapsed","setCollapsed","dropdownOpen","setDropdownOpen","searchToggle","setSearchToggle","searchFocus","setSearchFocus","parentName","setParentName","additionalNavClasses","setAdditionalNavClasses","size","scrollY","navbarRef","topbarRef","topbarWidth","topbarHeight","navbarWidth","navbarHeight","onFocus","toggleDropdown","name","onLinkClick","parent","width","makeNavbarSticky","nav","sticky","headerAbsolute","setPaddingTop","highlightDropdownParent","map","item","dropdown","dropdownLink","link","route","title","links","megamenu","megamenuColumn","megamenuBlock","headerClasses","hideTopbar","color","Object","values","some","light","dark","fixed","classes","loggedUser","hideToLoggedUser","position","dropdownItem","divider","megamenuItem","index","block","as","services","service","icon","content","image","button","showToLoggedUser","type","padding","img","dropdownIndex","display"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SACEC,QADF,EAEEC,MAFF,EAGEC,aAHF,EAIEC,GAJF,EAKEC,OALF,EAMEC,OANF,EAOEC,QAPF,EAQEC,cARF,EASEC,YATF,EAUEC,YAVF,EAWEC,SAXF,EAYEC,GAZF,EAaEC,GAbF,EAcEC,KAdF,QAeO,YAfP;AAiBA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,OAAOC,IAAP,MAAiB,2BAAjB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACU5B,QAAQ,CAAC,KAAD,CADlB;AAAA,MACjB6B,SADiB;AAAA,MACNC,YADM;;AAAA,mBAEgB9B,QAAQ,CAAC,EAAD,CAFxB;AAAA,MAEjB+B,YAFiB;AAAA,MAEHC,eAFG;;AAAA,mBAGgBhC,QAAQ,CAAC,KAAD,CAHxB;AAAA,MAGjBiC,YAHiB;AAAA,MAGHC,eAHG;;AAAA,mBAIclC,QAAQ,CAAC,KAAD,CAJtB;AAAA,MAIjBmC,WAJiB;AAAA,MAIJC,cAJI;;AAAA,mBAKYpC,QAAQ,CAAC,KAAD,CALpB;AAAA,MAKjBqC,UALiB;AAAA,MAKLC,aALK;;AAAA,mBAMgCtC,QAAQ,CAAC,EAAD,CANxC;AAAA,MAMjBuC,oBANiB;AAAA,MAMKC,uBANL;;AAQxB,MAAMC,IAAI,GAAGtB,aAAa,EAA1B;AACA,MAAMuB,OAAO,GAAGtB,iBAAiB,EAAjC;AAEA,MAAMuB,SAAS,GAAGzC,MAAM,CAAC,IAAD,CAAxB;AACA,MAAM0C,SAAS,GAAG1C,MAAM,CAAC,IAAD,CAAxB;;AAZwB,iBAaYmB,OAAO,CAACuB,SAAD,CAbnB;AAAA;AAAA,MAajBC,WAbiB;AAAA,MAaJC,YAbI;;AAAA,kBAcYzB,OAAO,CAACsB,SAAD,CAdnB;AAAA;AAAA,MAcjBI,WAdiB;AAAA,MAcJC,YAdI;;AAgBxB,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,WAAMb,cAAc,CAAC,CAACD,WAAF,CAApB;AAAA,GAAhB;;AAEA,MAAMe,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AAC/BnB,IAAAA,eAAe,iCAAMD,YAAN,2BAAqBoB,IAArB,EAA4B,CAACpB,YAAY,CAACoB,IAAD,CAAzC,GAAf;AACD,GAFD;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAAY;AAC9BZ,IAAAA,IAAI,CAACa,KAAL,GAAa,GAAb,IAAoBxB,YAAY,CAAC,CAACD,SAAF,CAAhC;AACAS,IAAAA,aAAa,CAACe,MAAD,CAAb;AACD,GAHD;;AAKA,MAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,QAAI3B,KAAK,CAAC4B,GAAN,CAAUC,MAAV,KAAqB,KAAzB,EAAgC;AAC9B,UAAIf,OAAO,GAAGI,YAAd,EAA4B;AAC1BN,QAAAA,uBAAuB,CAAC,WAAD,CAAvB;AACAQ,QAAAA,YAAY,GAAG,CAAf,IACEpB,KAAK,CAAC8B,cAAN,KAAyB,IAD3B,IAEE9B,KAAK,CAAC+B,aAAN,CAAoBX,YAApB,CAFF;AAGD,OALD,MAKO;AACLR,QAAAA,uBAAuB,CAAC,EAAD,CAAvB;AACAZ,QAAAA,KAAK,CAAC+B,aAAN,CAAoB,CAApB;AACD;AACF,KAVD,MAUO;AACLnB,MAAAA,uBAAuB,CAAC,EAAD,CAAvB;AACAZ,MAAAA,KAAK,CAAC+B,aAAN,CAAoB,CAApB;AACD;AACF,GAfD;;AAiBA1D,EAAAA,SAAS,CAAC,YAAM;AACdsD,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,CAACb,OAAD,EAAUI,YAAV,CAFM,CAAT,CA5CwB,CAgDxB;;AACA,MAAMc,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AACpCnC,IAAAA,IAAI,CAACoC,GAAL,CAAS,UAACC,IAAD,EAAU;AACjBA,MAAAA,IAAI,CAACC,QAAL,IACED,IAAI,CAACC,QAAL,CAAcF,GAAd,CAAkB,UAACG,YAAD,EAAkB;AAClCA,QAAAA,YAAY,CAACC,IAAb,IACED,YAAY,CAACC,IAAb,KAAsB7D,MAAM,CAAC8D,KAD/B,IAEE5B,aAAa,CAACwB,IAAI,CAACK,KAAN,CAFf;AAGAH,QAAAA,YAAY,CAACI,KAAb,IACEJ,YAAY,CAACI,KAAb,CAAmBP,GAAnB,CACE,UAACI,IAAD;AAAA,iBAAUA,IAAI,CAACA,IAAL,KAAc7D,MAAM,CAAC8D,KAArB,IAA8B5B,aAAa,CAACwB,IAAI,CAACK,KAAN,CAArD;AAAA,SADF,CADF;AAID,OARD,CADF;AAUAL,MAAAA,IAAI,CAACO,QAAL,IACEP,IAAI,CAACO,QAAL,CAAcR,GAAd,CAAkB,UAACS,cAAD;AAAA,eAChBA,cAAc,CAACT,GAAf,CAAmB,UAACU,aAAD;AAAA,iBACjBA,aAAa,CAACH,KAAd,CAAoBP,GAApB,CAAwB,UAACG,YAAD,EAAkB;AACxC,gBAAIA,YAAY,CAACC,IAAb,KAAsB7D,MAAM,CAAC8D,KAAjC,EAAwC;AACtCF,cAAAA,YAAY,CAACX,MAAb,GACIf,aAAa,CAAC0B,YAAY,CAACX,MAAd,CADjB,GAEIf,aAAa,CAACwB,IAAI,CAACK,KAAN,CAFjB;AAGD;AACF,WAND,CADiB;AAAA,SAAnB,CADgB;AAAA,OAAlB,CADF;AAYAL,MAAAA,IAAI,CAACG,IAAL,KAAc7D,MAAM,CAAC8D,KAArB,IAA8B5B,aAAa,CAACwB,IAAI,CAACK,KAAN,CAA3C;AACD,KAxBD;AAyBD,GA1BD;;AA4BAlE,EAAAA,SAAS,CAAC2D,uBAAD,EAA0B,EAA1B,CAAT;AAEA,SACE;AACE,IAAA,SAAS,mBAAYhC,KAAK,CAAC4C,aAAN,GAAsB5C,KAAK,CAAC4C,aAA5B,GAA4C,EAAxD,cACP5C,KAAK,CAAC8B,cAAN,GAAuB,iBAAvB,GAA2C,EADpC,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMG,CAAC9B,KAAK,CAAC6C,UAAP,IACC;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,GAAG,EAAE7B,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAE,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,oBADF,EAOE;AAAI,IAAA,SAAS,EAAC,4DAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAPF,CADF,CADF,EAcE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,SAAS,EAAC,4BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,QAAD;AACE,IAAA,SAAS,EAAC,mBADZ;AAEE,IAAA,GAAG,EAAC,mBAFN;AAGE,IAAA,MAAM,EAAEb,YAAY,CAAC,mBAAD,CAHtB;AAIE,IAAA,MAAM,EAAE;AAAA,aAAMmB,cAAc,CAAC,mBAAD,CAApB;AAAA,KAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,cAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,GAAG,EAAC,GAFN;AAGE,IAAA,IAAI,EAAC,GAHP;AAIE,IAAA,SAAS,EAAC,aAJZ;AAKE,IAAA,EAAE,EAAC,eALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,GAAG,EAAC,yBAFN;AAGE,IAAA,GAAG,EAAC,SAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,YANF,EAoBE,MAAC,YAAD;AAAc,IAAA,KAAK,MAAnB;AAAoB,uBAAgB,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,SAAS,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,GAAG,EAAC,kBAFN;AAGE,IAAA,GAAG,EAAC,QAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,WADF,EASE,MAAC,YAAD;AAAc,IAAA,SAAS,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,GAAG,EAAC,iBAFN;AAGE,IAAA,GAAG,EAAC,QAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,WATF,CApBF,CAFF,EA2CE,MAAC,QAAD;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,GAAG,EAAC,mBAFN;AAGE,IAAA,MAAM,EAAEnB,YAAY,CAAC,mBAAD,CAHtB;AAIE,IAAA,MAAM,EAAE;AAAA,aAAMmB,cAAc,CAAC,mBAAD,CAApB;AAAA,KAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,cAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,GAAG,EAAC,GAFN;AAGE,IAAA,IAAI,EAAC,GAHP;AAIE,IAAA,SAAS,EAAC,aAJZ;AAKE,IAAA,EAAE,EAAC,kBALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANF,EAeE,MAAC,YAAD;AAAc,IAAA,KAAK,MAAnB;AAAoB,uBAAgB,kBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,SAAS,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE,MAAC,YAAD;AAAc,IAAA,SAAS,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,CAfF,CA3CF,CAdF,CADF,CADF,CAPJ,EA6FE;AAAK,IAAA,GAAG,EAAEP,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,KAAK,EACHf,KAAK,CAAC4B,GAAN,CAAUkB,KAAV,GACIC,MAAM,CAACC,MAAP,CAAc7C,YAAd,EAA4B8C,IAA5B,CAAiC,UAACd,QAAD;AAAA,aAAcA,QAAd;AAAA,KAAjC,KACAlC,SADA,GAEE,OAFF,GAGED,KAAK,CAAC4B,GAAN,CAAUkB,KAJhB,GAKI,OAPR;AASE,IAAA,KAAK,EACH9C,KAAK,CAAC4B,GAAN,CAAUsB,KAAV,IACAH,MAAM,CAACC,MAAP,CAAc7C,YAAd,EAA4B8C,IAA5B,CAAiC,UAACd,QAAD;AAAA,aAAcA,QAAd;AAAA,KAAjC,CADA,IAEAlC,SAZJ;AAcE,IAAA,IAAI,EACFD,KAAK,CAAC4B,GAAN,CAAUuB,IAAV,IACA,CAACJ,MAAM,CAACC,MAAP,CAAc7C,YAAd,EAA4B8C,IAA5B,CAAiC,UAACd,QAAD;AAAA,aAAcA,QAAd;AAAA,KAAjC,CADD,IAEA,CAAClC,SAjBL;AAmBE,IAAA,KAAK,EAAED,KAAK,CAAC4B,GAAN,CAAUwB,KAAV,GAAkBpD,KAAK,CAAC4B,GAAN,CAAUwB,KAA5B,GAAoC,EAnB7C;AAoBE,IAAA,MAAM,EAAC,IApBT;AAqBE,IAAA,SAAS,aACPpD,KAAK,CAAC4B,GAAN,CAAUyB,OAAV,GACIrD,KAAK,CAAC4B,GAAN,CAAUyB,OADd,GAEI,8BAHG,cAIL1C,oBAAoB,GAAGA,oBAAH,GAA0B,EAJzC,CArBX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA2BE,MAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAe,IAAA,QAAQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFF,EAQE,MAAC,aAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMT,YAAY,CAAC,CAACD,SAAF,CAAlB;AAAA,KADX;AAEE,IAAA,SAAS,EAAC,sBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CARF,EAeE,MAAC,QAAD;AAAU,IAAA,MAAM,EAAEA,SAAlB;AAA6B,IAAA,MAAM,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,MAAM,MAAX;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,IACHA,IAAI,CAACoC,GAAL,CAAS,UAACC,IAAD;AAAA,WACPA,IAAI,CAACC,QAAL,IAAiBD,IAAI,CAACO,QAAtB,GACE;AACA,KAACzC,KAAK,CAACsD,UAAP,IACCtD,KAAK,CAACsD,UAAN,IAAoB,CAACpB,IAAI,CAACqB,gBAD3B,GAEE,MAAC,QAAD;AACE,MAAA,GAAG,MADL;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,GAAG,EAAErB,IAAI,CAACK,KAHZ;AAIE,MAAA,SAAS,EACPL,IAAI,CAACsB,QAAL,sBAA4BtB,IAAI,CAACsB,QAAjC,MALJ;AAOE,MAAA,MAAM,EAAErD,YAAY,CAAC+B,IAAI,CAACK,KAAN,CAPtB;AAQE,MAAA,MAAM,EAAE;AAAA,eAAMjB,cAAc,CAACY,IAAI,CAACK,KAAN,CAApB;AAAA,OARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUE,MAAC,cAAD;AACE,MAAA,GAAG,MADL;AAEE,MAAA,KAAK,MAFP;AAGE,MAAA,SAAS,EACP9B,UAAU,KAAKyB,IAAI,CAACK,KAApB,GAA4B,QAA5B,GAAuC,EAJ3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGL,IAAI,CAACK,KAPR,CAVF,EAmBE,MAAC,YAAD;AACE,MAAA,SAAS,aACPL,IAAI,CAACO,QAAL,GAAgB,kBAAhB,GAAqC,EAD9B,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGP,IAAI,CAACC,QAAL,IACCD,IAAI,CAACC,QAAL,CAAcF,GAAd,CAAkB,UAACwB,YAAD;AAAA,aAChBA,YAAY,CAACjB,KAAb,GACE,MAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,GAAG,EAAEiB,YAAY,CAAClB,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGkB,YAAY,CAACC,OAAb,IACC,MAAC,YAAD;AAAc,QAAA,OAAO,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAIE;AAAI,QAAA,SAAS,EAAC,oCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,YAAY,CAAClB,KADhB,CAJF,EAOGkB,YAAY,CAACjB,KAAb,CAAmBP,GAAnB,CAAuB,UAACI,IAAD;AAAA,eACtB,MAAC,UAAD;AACE,UAAA,GAAG,EAAEA,IAAI,CAACE,KADZ;AAEE,UAAA,eAAe,EAAC,QAFlB;AAGE,UAAA,IAAI,EAAEF,IAAI,CAACA,IAHb;AAIE,UAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME,MAAC,YAAD;AACE,UAAA,OAAO,EAAE;AAAA,mBACPb,WAAW,CAACU,IAAI,CAACK,KAAN,CADJ;AAAA,WADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKGF,IAAI,CAACE,KALR,EAMGF,IAAI,OAAJ,IACC,MAAC,KAAD;AACE,UAAA,KAAK,EAAC,SADR;AAEE,UAAA,SAAS,EAAC,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPJ,CANF,CADsB;AAAA,OAAvB,CAPH,CADF,GAkCE,MAAC,UAAD;AACE,QAAA,GAAG,EAAEoB,YAAY,CAAClB,KADpB;AAEE,QAAA,eAAe,EAAC,QAFlB;AAGE,QAAA,IAAI,EAAEkB,YAAY,CAACpB,IAHrB;AAIE,QAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,MAAC,YAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBAAMb,WAAW,CAACU,IAAI,CAACK,KAAN,CAAjB;AAAA,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGGkB,YAAY,CAAClB,KAHhB,EAIGkB,YAAY,OAAZ,IACC,MAAC,KAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,SAAS,EAAC,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALJ,CANF,CAnCc;AAAA,KAAlB,CANJ,EA+DGvB,IAAI,CAACO,QAAL,IACC,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,IAAI,CAACO,QAAL,CAAcR,GAAd,CACC,UAAC0B,YAAD,EAAeC,KAAf;AAAA,aACE,MAAC,GAAD;AAAK,QAAA,GAAG,EAAEA,KAAV;AAAiB,QAAA,EAAE,EAAC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,YAAY,CAAC1B,GAAb,CAAiB,UAAC4B,KAAD,EAAQD,KAAR;AAAA,eAChB,MAAC,KAAD,CAAO,QAAP;AAAgB,UAAA,GAAG,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAI,UAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGC,KAAK,CAACtB,KADT,CADF,EAIE;AAAI,UAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGsB,KAAK,CAACrB,KAAN,CAAYP,GAAZ,CACC,UAACI,IAAD,EAAOuB,KAAP;AAAA,iBACE;AACE,YAAA,GAAG,EAAEA,KADP;AAEE,YAAA,SAAS,EAAC,oBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAIE,MAAC,UAAD;AACE,YAAA,eAAe,EAAC,QADlB;AAEE,YAAA,IAAI,EAAEvB,IAAI,CAACA,IAFb;AAGE,YAAA,EAAE,EAAEA,IAAI,CAACyB,EAHX;AAIE,YAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAME,MAAC,YAAD;AACE,YAAA,SAAS,EAAC,oBADZ;AAEE,YAAA,OAAO,EAAE;AAAA,qBACPzB,IAAI,CAACZ,MAAL,GACID,WAAW,CACTa,IAAI,CAACZ,MADI,CADf,GAIID,WAAW,CACTU,IAAI,CAACK,KADI,CALR;AAAA,aAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAYGF,IAAI,CAACE,KAZR,EAaGF,IAAI,OAAJ,IACC,MAAC,KAAD;AACE,YAAA,KAAK,EAAC,SADR;AAEE,YAAA,SAAS,EAAC,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAdJ,CANF,CAJF,CADF;AAAA,SADD,CADH,CAJF,CADgB;AAAA,OAAjB,CADH,CADF;AAAA,KADD,CADH,CADF,EAwDGH,IAAI,CAAC6B,QAAL,IACC,MAAC,GAAD;AAAK,MAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG7B,IAAI,CAAC6B,QAAL,CAAc9B,GAAd,CAAkB,UAAC+B,OAAD;AAAA,aACjB,MAAC,GAAD;AACE,QAAA,GAAG,EAAEA,OAAO,CAACzB,KADf;AAEE,QAAA,EAAE,EAAC,GAFL;AAGE,QAAA,EAAE,EAAC,GAHL;AAIE,QAAA,SAAS,EAAC,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAEyB,OAAO,CAACC,IADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,OAAO,CAACzB,KADX,CADF,EAIE;AAAG,QAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGyB,OAAO,CAACE,OADX,CAJF,CANF,CANF,CADiB;AAAA,KAAlB,CADH,CAzDJ,CADF,EAsFGhC,IAAI,CAACiC,KAAL,IACC,MAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAY,MAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAEjC,IAAI,CAACiC,KADZ;AAEE,MAAA,GAAG,EAAC,EAFN;AAGE,MAAA,SAAS,EAAC,UAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAvFJ,CAhEJ,CAnBF,CAFF,GAyLE,EA3LJ,GA6LKnE,KAAK,CAACsD,UAAN,IAAoB,CAACpB,IAAI,CAACqB,gBAA3B,IACF,CAACvD,KAAK,CAACsD,UADL,GAEF,MAAC,OAAD;AACE,MAAA,GAAG,EAAEpB,IAAI,CAACK,KADZ;AAEE,MAAA,SAAS,EACPL,IAAI,CAACkC,MAAL,GACI,kDADJ,GAEI,EALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGlC,IAAI,CAACkC,MAAL,GACClC,IAAI,CAACmC,gBAAL,KAA0B,KAA1B,IACE,MAAC,UAAD;AACE,MAAA,eAAe,EAAC,QADlB;AAEE,MAAA,IAAI,EAAEnC,IAAI,CAACG,IAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMb,WAAW,CAACU,IAAI,CAACK,KAAN,CAAjB;AAAA,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGL,IAAI,CAACK,KAJR,CAJF,CAFH,GAeC,MAAC,UAAD;AACE,MAAA,eAAe,EAAC,QADlB;AAEE,MAAA,IAAI,EAAEL,IAAI,CAACG,IAFb;AAGE,MAAA,QAAQ,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,MAAC,OAAD;AAAS,MAAA,OAAO,EAAE;AAAA,eAAMb,WAAW,CAACU,IAAI,CAACK,KAAN,CAAjB;AAAA,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,IAAI,CAACK,KADR,CALF,CAvBJ,CAFE,GAqCF,EAnOK;AAAA,GAAT,CAFJ,CADF,EA2OE;AAAK,IAAA,SAAS,EAAC,4FAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AACE,IAAA,SAAS,EAAC,2BADZ;AAEE,mBAAY,QAFd;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMjC,eAAe,CAAC,CAACD,YAAF,CAArB;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CAFF,EAYGL,KAAK,CAACsD,UAAN,GACCxD,QAAQ,CAACmC,GAAT,CAAa,UAACC,IAAD;AAAA,WACX,MAAC,QAAD;AACE,MAAA,GAAG,MADL;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,GAAG,EAAEA,IAAI,CAACK,KAHZ;AAIE,MAAA,GAAG,EAAC,KAJN;AAKE,MAAA,SAAS,EACPL,IAAI,CAACoC,IAAL,KAAc,QAAd,GACI,6BADJ,GAEI,EARR;AAUE,MAAA,MAAM,EAAEnE,YAAY,CAAC+B,IAAI,CAACK,KAAN,CAVtB;AAWE,MAAA,MAAM,EAAE;AAAA,eAAMjB,cAAc,CAACY,IAAI,CAACK,KAAN,CAApB;AAAA,OAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcE,MAAC,cAAD;AACE,MAAA,GAAG,MADL;AAEE,MAAA,KAAK,EAAEL,IAAI,CAACoC,IAAL,KAAc,QAAd,IAA0B;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGrC,IAAI,CAACoC,IAAL,KAAc,QAAd,GACC;AACE,MAAA,GAAG,EAAEpC,IAAI,CAACsC,GADZ;AAEE,MAAA,GAAG,EAAEtC,IAAI,CAACK,KAFZ;AAGE,MAAA,SAAS,EAAC,sCAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAOCL,IAAI,CAACK,KAXT,CAdF,EA4BE,MAAC,YAAD;AAAc,MAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,IAAI,CAACC,QAAL,IACCD,IAAI,CAACC,QAAL,CAAcF,GAAd,CAAkB,UAACwB,YAAD,EAAegB,aAAf;AAAA,aAChBhB,YAAY,CAACC,OAAb,GACE,MAAC,YAAD;AAAc,QAAA,GAAG,EAAEe,aAAnB;AAAkC,QAAA,OAAO,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GAGE,MAAC,UAAD;AACE,QAAA,GAAG,EAAEA,aADP;AAEE,QAAA,eAAe,EAAC,QAFlB;AAGE,QAAA,IAAI,EAAEhB,YAAY,CAACpB,IAHrB;AAIE,QAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,MAAC,YAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBAAMb,WAAW,CAACU,IAAI,CAACK,KAAN,CAAjB;AAAA,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGGkB,YAAY,CAAClB,KAHhB,CANF,CAJc;AAAA,KAAlB,CAFJ,CA5BF,CADW;AAAA,GAAb,CADD,GAsDC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAM,IAAA,SAAS,EAAC,2FAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADF,CAFF,CAlEJ,EAmFE,MAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnFF,CA3OF,CAfF,CA3BF,CADF,CA7FF,EA8cGlC,YAAY,IACX;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAqC,IAAA,KAAK,EAAE;AAAEqE,MAAAA,OAAO,EAAE;AAAX,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,8DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMpE,eAAe,CAAC,CAACD,YAAF,CAArB;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAK,IAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CAJF,CADF,EASE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,IAAA,MAAM,EAAC,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,mBADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,EAAE,EAAC,QAJL;AAKE,IAAA,SAAS,MALX;AAME,IAAA,WAAW,EAAC,2BANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE;AAAQ,IAAA,SAAS,EAAC,oBAAlB;AAAuC,IAAA,IAAI,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CATF,CADF,CATF,CADF,CA/cJ,CADF;AAifD,CAhkBD;;GAAMN,M;UASYP,iB,EAIoBC,O,EACAA,O;;;KAdhCM,M;AAkkBN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport Link from \"next/link\";\r\nimport Router from \"next/router\";\r\n\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Badge,\r\n} from \"reactstrap\";\r\n\r\nimport UseWindowSize from \"../hooks/UseWindowSize\";\r\nimport useScrollPosition from \"@react-hook/window-scroll\";\r\nimport useSize from \"@react-hook/size\";\r\n\r\nimport Logo from \"../../public/svg/logo.svg\";\r\n\r\nimport ActiveLink from \"./ActiveLink\";\r\nimport CartOverviewDropdown from \"./CartOverviewDropdown\";\r\n\r\nimport menu from \"../data/menu.json\";\r\nimport userMenu from \"../data/user-menu.json\";\r\n\r\nconst Header = (props) => {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [dropdownOpen, setDropdownOpen] = useState({});\r\n  const [searchToggle, setSearchToggle] = useState(false);\r\n  const [searchFocus, setSearchFocus] = useState(false);\r\n  const [parentName, setParentName] = useState(false);\r\n  const [additionalNavClasses, setAdditionalNavClasses] = useState(\"\");\r\n\r\n  const size = UseWindowSize();\r\n  const scrollY = useScrollPosition();\r\n\r\n  const navbarRef = useRef(null);\r\n  const topbarRef = useRef(null);\r\n  const [topbarWidth, topbarHeight] = useSize(topbarRef);\r\n  const [navbarWidth, navbarHeight] = useSize(navbarRef);\r\n\r\n  const onFocus = () => setSearchFocus(!searchFocus);\r\n\r\n  const toggleDropdown = (name) => {\r\n    setDropdownOpen({ ...dropdownOpen, [name]: !dropdownOpen[name] });\r\n  };\r\n\r\n  const onLinkClick = (parent) => {\r\n    size.width < 991 && setCollapsed(!collapsed);\r\n    setParentName(parent);\r\n  };\r\n\r\n  const makeNavbarSticky = () => {\r\n    if (props.nav.sticky !== false) {\r\n      if (scrollY > topbarHeight) {\r\n        setAdditionalNavClasses(\"fixed-top\");\r\n        navbarHeight > 0 &&\r\n          props.headerAbsolute !== true &&\r\n          props.setPaddingTop(navbarHeight);\r\n      } else {\r\n        setAdditionalNavClasses(\"\");\r\n        props.setPaddingTop(0);\r\n      }\r\n    } else {\r\n      setAdditionalNavClasses(\"\");\r\n      props.setPaddingTop(0);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    makeNavbarSticky();\r\n  }, [scrollY, topbarHeight]);\r\n\r\n  // highlight not only active dropdown item, but also its parent, i.e. dropdown toggle\r\n  const highlightDropdownParent = () => {\r\n    menu.map((item) => {\r\n      item.dropdown &&\r\n        item.dropdown.map((dropdownLink) => {\r\n          dropdownLink.link &&\r\n            dropdownLink.link === Router.route &&\r\n            setParentName(item.title);\r\n          dropdownLink.links &&\r\n            dropdownLink.links.map(\r\n              (link) => link.link === Router.route && setParentName(item.title)\r\n            );\r\n        });\r\n      item.megamenu &&\r\n        item.megamenu.map((megamenuColumn) =>\r\n          megamenuColumn.map((megamenuBlock) =>\r\n            megamenuBlock.links.map((dropdownLink) => {\r\n              if (dropdownLink.link === Router.route) {\r\n                dropdownLink.parent\r\n                  ? setParentName(dropdownLink.parent)\r\n                  : setParentName(item.title);\r\n              }\r\n            })\r\n          )\r\n        );\r\n      item.link === Router.route && setParentName(item.title);\r\n    });\r\n  };\r\n\r\n  useEffect(highlightDropdownParent, []);\r\n\r\n  return (\r\n    <header\r\n      className={`header ${props.headerClasses ? props.headerClasses : \"\"} ${\r\n        props.headerAbsolute ? \"header-absolute\" : \"\"\r\n      }`}\r\n    >\r\n      {/* Top Bar*/}\r\n      {!props.hideTopbar && (\r\n        <div className=\"top-bar\" ref={topbarRef}>\r\n          <Container fluid={true}>\r\n            <Row className=\"d-flex align-items-center\">\r\n              <Col sm=\"7\" className=\"d-none d-sm-block\">\r\n                <ul className=\"list-inline mb-0\">\r\n                  <li className=\"list-inline-item pr-3 mr-0\">\r\n                    <svg className=\"svg-icon mr-2\">\r\n                      <use xlinkHref=\"/icons/orion-svg-sprite.svg#calls-1\"></use>\r\n                    </svg>\r\n                    020-800-456-747\r\n                  </li>\r\n                  <li className=\"list-inline-item px-3 border-left d-none d-lg-inline-block\">\r\n                    Free shipping on orders over $300\r\n                  </li>\r\n                </ul>\r\n              </Col>\r\n              <Col sm=\"5\" className=\"d-flex justify-content-end\">\r\n                {/* Language Dropdown*/}\r\n                <Dropdown\r\n                  className=\"border-right px-3\"\r\n                  key=\"language_dropdown\"\r\n                  isOpen={dropdownOpen[\"language_dropdown\"]}\r\n                  toggle={() => toggleDropdown(\"language_dropdown\")}\r\n                >\r\n                  <DropdownToggle\r\n                    caret\r\n                    tag=\"a\"\r\n                    href=\"#\"\r\n                    className=\"topbar-link\"\r\n                    id=\"langsDropdown\"\r\n                  >\r\n                    <img\r\n                      className=\"topbar-flag\"\r\n                      src=\"/svg/united-kingdom.svg\"\r\n                      alt=\"english\"\r\n                    />\r\n                    English\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right aria-labelledby=\"langsDropdown\">\r\n                    <DropdownItem className=\"text-sm\">\r\n                      <img\r\n                        className=\"topbar-flag\"\r\n                        src=\"/svg/germany.svg\"\r\n                        alt=\"german\"\r\n                      />\r\n                      German\r\n                    </DropdownItem>\r\n                    <DropdownItem className=\"text-sm\">\r\n                      <img\r\n                        className=\"topbar-flag\"\r\n                        src=\"/svg/france.svg\"\r\n                        alt=\"french\"\r\n                      />\r\n                      French\r\n                    </DropdownItem>\r\n                  </DropdownMenu>\r\n                </Dropdown>\r\n\r\n                {/* Currency Dropdown*/}\r\n                <Dropdown\r\n                  className=\"pl-3 ml-0\"\r\n                  key=\"currency_dropdown\"\r\n                  isOpen={dropdownOpen[\"currency_dropdown\"]}\r\n                  toggle={() => toggleDropdown(\"currency_dropdown\")}\r\n                >\r\n                  <DropdownToggle\r\n                    caret\r\n                    tag=\"a\"\r\n                    href=\"#\"\r\n                    className=\"topbar-link\"\r\n                    id=\"currencyDropdown\"\r\n                  >\r\n                    USD\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right aria-labelledby=\"currencyDropdown\">\r\n                    <DropdownItem className=\"text-sm\">EUR</DropdownItem>\r\n                    <DropdownItem className=\"text-sm\">GBP</DropdownItem>\r\n                  </DropdownMenu>\r\n                </Dropdown>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      )}\r\n      {/* Top Bar End*/}\r\n      {/* Navbar*/}\r\n      <div ref={navbarRef}>\r\n        <Navbar\r\n          color={\r\n            props.nav.color\r\n              ? Object.values(dropdownOpen).some((dropdown) => dropdown) ||\r\n                collapsed\r\n                ? \"white\"\r\n                : props.nav.color\r\n              : \"white\"\r\n          }\r\n          light={\r\n            props.nav.light ||\r\n            Object.values(dropdownOpen).some((dropdown) => dropdown) ||\r\n            collapsed\r\n          }\r\n          dark={\r\n            props.nav.dark &&\r\n            !Object.values(dropdownOpen).some((dropdown) => dropdown) &&\r\n            !collapsed\r\n          }\r\n          fixed={props.nav.fixed ? props.nav.fixed : \"\"}\r\n          expand=\"lg\"\r\n          className={` ${\r\n            props.nav.classes\r\n              ? props.nav.classes\r\n              : \"navbar-sticky bg-fixed-white\"\r\n          } ${additionalNavClasses ? additionalNavClasses : \"\"}`}\r\n        >\r\n          <Container fluid>\r\n            {/* Navbar Header  */}\r\n            <Link href=\"/\" passHref>\r\n              <a className=\"py-1 navbar-brand\">\r\n                <Logo />\r\n              </a>\r\n            </Link>\r\n\r\n            <NavbarToggler\r\n              onClick={() => setCollapsed(!collapsed)}\r\n              className=\"navbar-toggler-right\"\r\n            >\r\n              <i className=\"fa fa-bars\"></i>\r\n            </NavbarToggler>\r\n            {/* Navbar Collapse */}\r\n            <Collapse isOpen={collapsed} navbar>\r\n              <Nav navbar className=\"mx-auto\">\r\n                {menu &&\r\n                  menu.map((item) =>\r\n                    item.dropdown || item.megamenu ? (\r\n                      // show entire menu to unlogged user or hide items that have hideToLoggedUser set to true\r\n                      !props.loggedUser ||\r\n                      (props.loggedUser && !item.hideToLoggedUser) ? (\r\n                        <Dropdown\r\n                          nav\r\n                          inNavbar\r\n                          key={item.title}\r\n                          className={\r\n                            item.position ? `position-${item.position}` : ``\r\n                          }\r\n                          isOpen={dropdownOpen[item.title]}\r\n                          toggle={() => toggleDropdown(item.title)}\r\n                        >\r\n                          <DropdownToggle\r\n                            nav\r\n                            caret\r\n                            className={\r\n                              parentName === item.title ? \"active\" : \"\"\r\n                            }\r\n                          >\r\n                            {item.title}\r\n                          </DropdownToggle>\r\n                          <DropdownMenu\r\n                            className={` ${\r\n                              item.megamenu ? \"megamenu py-lg-0\" : \"\"\r\n                            }`}\r\n                          >\r\n                            {item.dropdown &&\r\n                              item.dropdown.map((dropdownItem) =>\r\n                                dropdownItem.links ? (\r\n                                  <React.Fragment key={dropdownItem.title}>\r\n                                    {dropdownItem.divider && (\r\n                                      <DropdownItem divider />\r\n                                    )}\r\n                                    <h6 className=\"dropdown-header font-weight-normal\">\r\n                                      {dropdownItem.title}\r\n                                    </h6>\r\n                                    {dropdownItem.links.map((link) => (\r\n                                      <ActiveLink\r\n                                        key={link.title}\r\n                                        activeClassName=\"active\"\r\n                                        href={link.link}\r\n                                        passHref\r\n                                      >\r\n                                        <DropdownItem\r\n                                          onClick={() =>\r\n                                            onLinkClick(item.title)\r\n                                          }\r\n                                        >\r\n                                          {link.title}\r\n                                          {link.new && (\r\n                                            <Badge\r\n                                              color=\"warning\"\r\n                                              className=\"ml-1 mt-n1\"\r\n                                            >\r\n                                              New\r\n                                            </Badge>\r\n                                          )}\r\n                                        </DropdownItem>\r\n                                      </ActiveLink>\r\n                                    ))}\r\n                                  </React.Fragment>\r\n                                ) : (\r\n                                  <ActiveLink\r\n                                    key={dropdownItem.title}\r\n                                    activeClassName=\"active\"\r\n                                    href={dropdownItem.link}\r\n                                    passHref\r\n                                  >\r\n                                    <DropdownItem\r\n                                      onClick={() => onLinkClick(item.title)}\r\n                                    >\r\n                                      {dropdownItem.title}\r\n                                      {dropdownItem.new && (\r\n                                        <Badge\r\n                                          color=\"warning\"\r\n                                          className=\"ml-1 mt-n1\"\r\n                                        >\r\n                                          New\r\n                                        </Badge>\r\n                                      )}\r\n                                    </DropdownItem>\r\n                                  </ActiveLink>\r\n                                )\r\n                              )}\r\n                            {item.megamenu && (\r\n                              <Row>\r\n                                <Col lg=\"9\">\r\n                                  <Row className=\"p-3 pr-lg-0 pl-lg-5 pt-lg-5\">\r\n                                    {item.megamenu.map(\r\n                                      (megamenuItem, index) => (\r\n                                        <Col key={index} lg=\"3\">\r\n                                          {megamenuItem.map((block, index) => (\r\n                                            <React.Fragment key={index}>\r\n                                              <h6 className=\"text-uppercase\">\r\n                                                {block.title}\r\n                                              </h6>\r\n                                              <ul className=\"megamenu-list list-unstyled\">\r\n                                                {block.links.map(\r\n                                                  (link, index) => (\r\n                                                    <li\r\n                                                      key={index}\r\n                                                      className=\"megamenu-list-item\"\r\n                                                    >\r\n                                                      <ActiveLink\r\n                                                        activeClassName=\"active\"\r\n                                                        href={link.link}\r\n                                                        as={link.as}\r\n                                                        passHref\r\n                                                      >\r\n                                                        <DropdownItem\r\n                                                          className=\"megamenu-list-link\"\r\n                                                          onClick={() =>\r\n                                                            link.parent\r\n                                                              ? onLinkClick(\r\n                                                                  link.parent\r\n                                                                )\r\n                                                              : onLinkClick(\r\n                                                                  item.title\r\n                                                                )\r\n                                                          }\r\n                                                        >\r\n                                                          {link.title}\r\n                                                          {link.new && (\r\n                                                            <Badge\r\n                                                              color=\"warning\"\r\n                                                              className=\"ml-1 mt-n1\"\r\n                                                            >\r\n                                                              New\r\n                                                            </Badge>\r\n                                                          )}\r\n                                                        </DropdownItem>\r\n                                                      </ActiveLink>\r\n                                                    </li>\r\n                                                  )\r\n                                                )}\r\n                                              </ul>\r\n                                            </React.Fragment>\r\n                                          ))}\r\n                                        </Col>\r\n                                      )\r\n                                    )}\r\n                                  </Row>\r\n                                  {item.services && (\r\n                                    <Row className=\"megamenu-services d-none d-lg-flex pl-lg-5\">\r\n                                      {item.services.map((service) => (\r\n                                        <Col\r\n                                          key={service.title}\r\n                                          xl=\"3\"\r\n                                          lg=\"6\"\r\n                                          className=\"d-flex\"\r\n                                        >\r\n                                          <div className=\"megamenu-services-item\">\r\n                                            <svg className=\"svg-icon megamenu-services-icon\">\r\n                                              <use\r\n                                                xlinkHref={service.icon}\r\n                                              ></use>\r\n                                            </svg>\r\n                                            <div>\r\n                                              <h6 className=\"text-uppercase\">\r\n                                                {service.title}\r\n                                              </h6>\r\n                                              <p className=\"mb-0 text-muted text-sm\">\r\n                                                {service.content}\r\n                                              </p>\r\n                                            </div>\r\n                                          </div>\r\n                                        </Col>\r\n                                      ))}\r\n                                    </Row>\r\n                                  )}\r\n                                </Col>\r\n                                {item.image && (\r\n                                  <Col lg=\"3\" className=\"d-none d-lg-block\">\r\n                                    <img\r\n                                      src={item.image}\r\n                                      alt=\"\"\r\n                                      className=\"bg-image\"\r\n                                    />\r\n                                  </Col>\r\n                                )}\r\n                              </Row>\r\n                            )}\r\n                          </DropdownMenu>\r\n                        </Dropdown>\r\n                      ) : (\r\n                        \"\"\r\n                      )\r\n                    ) : (props.loggedUser && !item.hideToLoggedUser) ||\r\n                      !props.loggedUser ? (\r\n                      <NavItem\r\n                        key={item.title}\r\n                        className={\r\n                          item.button\r\n                            ? \"mt-3 mt-lg-0 ml-lg-3 d-lg-none d-xl-inline-block\"\r\n                            : \"\"\r\n                        }\r\n                      >\r\n                        {item.button ? (\r\n                          item.showToLoggedUser !== false && (\r\n                            <ActiveLink\r\n                              activeClassName=\"active\"\r\n                              href={item.link}\r\n                            >\r\n                              <a\r\n                                className=\"btn btn-primary\"\r\n                                onClick={() => onLinkClick(item.title)}\r\n                              >\r\n                                {item.title}\r\n                              </a>\r\n                            </ActiveLink>\r\n                          )\r\n                        ) : (\r\n                          <ActiveLink\r\n                            activeClassName=\"active\"\r\n                            href={item.link}\r\n                            passHref\r\n                          >\r\n                            <NavLink onClick={() => onLinkClick(item.title)}>\r\n                              {item.title}\r\n                            </NavLink>\r\n                          </ActiveLink>\r\n                        )}\r\n                      </NavItem>\r\n                    ) : (\r\n                      \"\"\r\n                    )\r\n                  )}\r\n              </Nav>\r\n\r\n              <div className=\"d-flex align-items-center justify-content-between justify-content-lg-end mt-1 mb-2 my-lg-0\">\r\n                {/* Search Button*/}\r\n                <div\r\n                  className=\"nav-item navbar-icon-link\"\r\n                  data-toggle=\"search\"\r\n                  onClick={() => setSearchToggle(!searchToggle)}\r\n                >\r\n                  <svg className=\"svg-icon\">\r\n                    <use xlinkHref=\"/icons/orion-svg-sprite.svg#search-1\"></use>\r\n                  </svg>\r\n                </div>\r\n\r\n                {props.loggedUser ? (\r\n                  userMenu.map((item) => (\r\n                    <Dropdown\r\n                      nav\r\n                      inNavbar\r\n                      key={item.title}\r\n                      tag=\"div\"\r\n                      className={\r\n                        item.type === \"avatar\"\r\n                          ? \"navbar-icon-link mt-n1 py-0\"\r\n                          : \"\"\r\n                      }\r\n                      isOpen={dropdownOpen[item.title]}\r\n                      toggle={() => toggleDropdown(item.title)}\r\n                    >\r\n                      {/* Logged User - Show User Menu */}\r\n                      <DropdownToggle\r\n                        nav\r\n                        style={item.type === \"avatar\" && { padding: 0 }}\r\n                      >\r\n                        {item.type === \"avatar\" ? (\r\n                          <img\r\n                            src={item.img}\r\n                            alt={item.title}\r\n                            className=\"avatar avatar-sm avatar-border-white\"\r\n                          />\r\n                        ) : (\r\n                          item.title\r\n                        )}\r\n                      </DropdownToggle>\r\n                      <DropdownMenu right>\r\n                        {item.dropdown &&\r\n                          item.dropdown.map((dropdownItem, dropdownIndex) =>\r\n                            dropdownItem.divider ? (\r\n                              <DropdownItem key={dropdownIndex} divider />\r\n                            ) : (\r\n                              <ActiveLink\r\n                                key={dropdownIndex}\r\n                                activeClassName=\"active\"\r\n                                href={dropdownItem.link}\r\n                                passHref\r\n                              >\r\n                                <DropdownItem\r\n                                  onClick={() => onLinkClick(item.title)}\r\n                                >\r\n                                  {dropdownItem.title}\r\n                                </DropdownItem>\r\n                              </ActiveLink>\r\n                            )\r\n                          )}\r\n                      </DropdownMenu>\r\n                    </Dropdown>\r\n                  ))\r\n                ) : (\r\n                  <div className=\"nav-item\">\r\n                    {/* User Not Logged - link to login page*/}\r\n                    <Link href=\"/customer-login\">\r\n                      <a className=\"navbar-icon-link\">\r\n                        <svg className=\"svg-icon\">\r\n                          <use xlinkHref=\"/icons/orion-svg-sprite.svg#male-user-1\"></use>\r\n                        </svg>\r\n                        <span className=\"text-sm ml-2 ml-lg-0 text-uppercase text-sm font-weight-bold d-none d-sm-inline d-lg-none\">\r\n                          Log in\r\n                        </span>\r\n                      </a>\r\n                    </Link>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Cart Overview Dropdown*/}\r\n\r\n                <CartOverviewDropdown />\r\n              </div>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </div>\r\n      {/* /Navbar */}\r\n      {/* Fullscreen search area*/}\r\n      {searchToggle && (\r\n        <div className=\"search-area-wrapper\" style={{ display: \"block\" }}>\r\n          <div className=\"search-area d-flex align-items-center justify-content-center\">\r\n            <div\r\n              className=\"close-btn\"\r\n              onClick={() => setSearchToggle(!searchToggle)}\r\n            >\r\n              <svg className=\"svg-icon svg-icon-light w-3rem h-3rem\">\r\n                <use xlinkHref=\"/icons/orion-svg-sprite.svg#close-1\"> </use>\r\n              </svg>\r\n            </div>\r\n            <form className=\"search-area-form\" action=\"#\">\r\n              <div className=\"form-group position-relative\">\r\n                <input\r\n                  className=\"search-area-input\"\r\n                  type=\"search\"\r\n                  name=\"search\"\r\n                  id=\"search\"\r\n                  autoFocus\r\n                  placeholder=\"What are you looking for?\"\r\n                />\r\n                <button className=\"search-area-button\" type=\"submit\">\r\n                  <svg className=\"svg-icon\">\r\n                    <use xlinkHref=\"/icons/orion-svg-sprite.svg#search-1\"></use>\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/* /Fullscreen search area*/}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"]},"metadata":{},"sourceType":"module"}