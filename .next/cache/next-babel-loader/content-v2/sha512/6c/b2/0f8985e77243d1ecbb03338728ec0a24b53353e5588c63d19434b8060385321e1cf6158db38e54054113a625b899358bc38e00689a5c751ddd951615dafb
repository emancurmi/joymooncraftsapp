{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from \"react\";\nimport { Container, Row, Col, Breadcrumb, BreadcrumbItem, Button, Alert } from \"reactstrap\";\nimport { FormContext } from \"../components/FormContext\";\nimport Link from \"next/link\";\n\nvar CheckoutConfirmed = function CheckoutConfirmed() {\n  var _useContext = useContext(FormContext),\n      formInputs = _useContext[0],\n      setFormInputs = _useContext[1]; // Checkout inputs context\n\n\n  console.log(formInputs); // Log of filled inputs and cart items\n\n  var today = new Date(); // Demo date\n\n  var day = today.getDate(); // Demo day\n\n  var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]; // DEMO ONLY - English month names\n\n  var month = months[today.getMonth()]; // Demo month\n\n  var year = today.getFullYear(); // Demo year\n  // Remove on production\n\n  var finalPrice = formInputs.cart ? formInputs.shipping[2] + formInputs.cart.reduce(function (sum, _ref) {\n    var price = _ref.price,\n        quantity = _ref.quantity;\n    return sum + price * quantity;\n  }, 0) : 450; // Uncomment on production - final sum of cart items plus shipping\n  // const finalPrice = formInputs.shipping[2] + formInputs.cart.reduce((sum, { price, quantity }) => sum + price * quantity, 0)\n  // Remove on production\n\n  var shipping = formInputs.shipping ? formInputs.shipping[1] : \"DHL\"; // Uncomment on production - selected shipping option\n  //const shipping = formInputs.shipping[1]\n  // Order details - fill Order no. & date with real data on production\n\n  var order = [{\n    label: \"Order no.\",\n    value: \"2019\"\n  }, {\n    label: \"Date\",\n    value: \"\".concat(month, \" \").concat(day, \", \").concat(year)\n  }, {\n    label: \"Total\",\n    value: \"$\" + finalPrice\n  }, {\n    label: \"Shipping\",\n    value: shipping\n  }];\n  return __jsx(React.Fragment, null, __jsx(\"section\", {\n    className: \"hero py-6\"\n  }, __jsx(Container, null, __jsx(Breadcrumb, {\n    className: \"pl-0\"\n  }, __jsx(BreadcrumbItem, null, __jsx(Link, {\n    href: \"/index\"\n  }, __jsx(\"a\", null, \"Home\"))), __jsx(BreadcrumbItem, {\n    active: true\n  }, \"Order confirmed\")), __jsx(\"div\", {\n    className: \"hero-content\"\n  }, __jsx(\"h1\", {\n    className: \"hero-heading\"\n  }, \"Order confirmed\"), __jsx(Alert, {\n    color: \"success\",\n    className: \"d-flex align-items-center\"\n  }, \"Your order is confirmed\")))), __jsx(\"section\", {\n    className: \"pb-6\"\n  }, __jsx(Container, null, __jsx(\"p\", {\n    className: \"lead\"\n  }, \"Thank you, Julie. Your order is confirmed.\"), __jsx(\"p\", {\n    className: \"lead mb-5\"\n  }, \"Your order hasn't shipped yet but we will send you ane email when it does.\"), __jsx(\"p\", {\n    className: \"mb-6\"\n  }, __jsx(Link, {\n    href: \"/customer-order\",\n    passHref: true\n  }, __jsx(Button, {\n    color: \"outline-dark\"\n  }, \"View or manage your order\"))), __jsx(\"div\", {\n    className: \"p-5 bg-gray-100\"\n  }, __jsx(Row, null, order.map(function (item) {\n    return (// Order details\n      __jsx(Col, {\n        key: item.label,\n        xs: \"6\",\n        lg: \"3\",\n        className: \"mb-5 mb-lg-0\"\n      }, __jsx(\"div\", {\n        className: \"text-sm text-uppercase text-muted mb-3\"\n      }, item.label), __jsx(\"span\", {\n        className: \"h5\"\n      }, item.value))\n    );\n  }))))));\n};\n\nexport var __N_SSG = true;\nexport default CheckoutConfirmed;","map":null,"metadata":{},"sourceType":"module"}