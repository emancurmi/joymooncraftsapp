{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useRef } from \"react\";\nimport Lightbox from \"react-image-lightbox\";\nimport Magnifier from \"react-magnifier\";\nimport { Row, Col, Button } from \"reactstrap\";\nimport ReactIdSwiper from \"react-id-swiper\";\n\nconst SwiperGallery = ({\n  data,\n  vertical\n}) => {\n  const {\n    0: lightBoxOpen,\n    1: setLightBoxOpen\n  } = useState(false);\n  const {\n    0: activeImage,\n    1: setActiveImage\n  } = useState(0);\n  const {\n    0: activeSlide,\n    1: setActiveSlide\n  } = useState(0);\n  const gallerySwiperRef = useRef(null);\n\n  const slideTo = index => {\n    setActiveSlide(index);\n\n    if (gallerySwiperRef.current !== null && gallerySwiperRef.current.swiper !== null) {\n      gallerySwiperRef.current.swiper.slideToLoop(index);\n    }\n  };\n\n  const onClick = index => {\n    setActiveImage(index);\n    setLightBoxOpen(!lightBoxOpen);\n  };\n\n  let sliderColumns = {\n    xs: 12\n  },\n      sliderClass = \"detail-carousel\",\n      thumbsColumns = {\n    xs: 12\n  },\n      thumbsClass = \"\";\n\n  if (vertical) {\n    sliderColumns = {\n      xs: 12,\n      md: 10\n    };\n    sliderClass = \"detail-carousel order-md-2\", thumbsColumns = {\n      md: 2\n    };\n    thumbsClass = \"d-none d-md-block pr-0 order-md-1\";\n  }\n\n  const sliderParams = {\n    slidesPerView: 1,\n    spaceBetween: 0,\n    loop: true,\n    on: {\n      slideChange: () => setActiveSlide(gallerySwiperRef.current.swiper.realIndex)\n    }\n  };\n  const customStyles = {\n    overlay: {\n      zIndex: \"1000\"\n    },\n    bodyOpen: {\n      position: \"fixed\"\n    }\n  };\n  return __jsx(React.Fragment, null, __jsx(Row, null, __jsx(Col, _extends({\n    className: sliderClass\n  }, sliderColumns), __jsx(\"div\", {\n    className: \"ribbon ribbon-info\"\n  }, \"Fresh\"), __jsx(\"div\", {\n    className: \"ribbon ribbon-primary\"\n  }, \"Sale\"), __jsx(ReactIdSwiper, _extends({}, sliderParams, {\n    ref: gallerySwiperRef\n  }), data.map((item, index) => __jsx(\"div\", {\n    key: index\n  }, __jsx(Magnifier, {\n    mgShowOverflow: false,\n    mgWidth: 2000,\n    mgHeight: 2000,\n    className: \"img-fluid\",\n    src: item.img,\n    alt: item.alt,\n    zoomFactor: 0.11,\n    style: {\n      cursor: \"default\"\n    }\n  }), __jsx(Button, {\n    color: \"expand\",\n    onClick: () => onClick(index)\n  }, __jsx(\"svg\", {\n    className: \"svg-icon\"\n  }, __jsx(\"use\", {\n    xlinkHref: \"/icons/orion-svg-sprite.svg#expand-1\"\n  }))))))), __jsx(Col, _extends({\n    className: thumbsClass\n  }, thumbsColumns), data.map((item, index) => __jsx(\"button\", {\n    key: index,\n    onClick: () => slideTo(index),\n    className: `detail-thumb-item mb-3 ${activeSlide === index ? \"active\" : \"\"}`\n  }, __jsx(\"img\", {\n    className: \"img-fluid\",\n    src: item.img,\n    alt: item.alt\n  })))), lightBoxOpen && __jsx(Lightbox, {\n    mainSrc: data[activeImage].img,\n    nextSrc: data[(activeImage + 1) % data.length].img,\n    prevSrc: data[(activeImage + data.length - 1) % data.length].img,\n    onCloseRequest: () => setLightBoxOpen(false),\n    imageCaption: data[activeImage].caption,\n    onMovePrevRequest: () => setActiveImage((activeImage + data.length - 1) % data.length),\n    onMoveNextRequest: () => setActiveImage((activeImage + 1) % data.length),\n    enableZoom: false,\n    reactModalStyle: customStyles\n  })));\n};\n\nexport default SwiperGallery;","map":null,"metadata":{},"sourceType":"module"}