{"ast":null,"code":"import _extends from \"C:/Users/Eman/source/repos/emancurmi/joymooncraftsapp/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"C:/Users/Eman/source/repos/emancurmi/joymooncraftsapp/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eman\\\\source\\\\repos\\\\emancurmi\\\\joymooncraftsapp\\\\src\\\\components\\\\Swiper.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport ReactIdSwiper from \"react-id-swiper\";\nimport { Container, Row, Col, Button } from \"reactstrap\";\nexport default function Swiper(props) {\n  var _this = this;\n\n  var breakpoints = [];\n\n  if (props.sm) {\n    breakpoints[565] = {\n      slidesPerView: props.sm\n    };\n  }\n\n  if (props.md) {\n    breakpoints[768] = {\n      slidesPerView: props.md\n    };\n  }\n\n  if (props.lg) {\n    breakpoints[991] = {\n      slidesPerView: props.lg\n    };\n  }\n\n  if (props.xl) {\n    breakpoints[1200] = {\n      slidesPerView: props.xl\n    };\n  }\n\n  if (props.xxl) {\n    breakpoints[1400] = {\n      slidesPerView: props.xxl\n    };\n  }\n\n  if (props.xxxl) {\n    breakpoints[1600] = {\n      slidesPerView: props.xxxl\n    };\n  }\n\n  var params = {\n    containerClass: \"swiper-container \".concat(props.className ? props.className : \"\"),\n    slidesPerView: props.slidesPerView,\n    effect: props.effect,\n    allowTouchMove: props.allowTouchMove === false ? false : true,\n    spaceBetween: props.spaceBetween,\n    centeredSlides: props.centeredSlides,\n    roundLengths: props.roundLengths,\n    loop: props.loop,\n    speed: props.speed ? props.speed : 400,\n    parallax: props.parallax,\n    breakpoints: breakpoints,\n    autoplay: props.autoplay ? {\n      delay: props.delay\n    } : false,\n    pagination: props.pagination !== false ? {\n      el: \".swiper-pagination.\".concat(props.paginationClass),\n      clickable: true,\n      dynamicBullets: true\n    } : false,\n    navigation: {\n      nextEl: props.navigation ? \".swiper-button-next.swiper-button-\".concat(props.navigationColor ? props.navigationColor : \"white\", \".swiper-nav.d-none.d-lg-block\") : \"\",\n      prevEl: props.navigation ? \".swiper-button-prev.swiper-button-\".concat(props.navigationColor ? props.navigationColor : \"white\", \".swiper-nav.d-none.d-lg-block\") : \"\"\n    },\n    wrapperClass: \"swiper-wrapper \".concat(props.wrapperClass ? props.wrapperClass : \"\")\n  };\n  return props.data ? __jsx(ReactIdSwiper, _extends({}, params, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }), props.data.map(function (slide, index) {\n    return __jsx(\"div\", {\n      key: index,\n      className: \"\".concat(slide.itemclass ? slide.itemclass : \"\", \" \").concat(!props.columns ? \"bg-cover\" : \"\", \" \").concat(slide.bgdirection ? \"bg-cover-\".concat(slide.bgdirection) : \"\", \" \").concat(slide.darkOverlay ? \"dark-overlay\" : \"\"),\n      style: _objectSpread(_objectSpread({}, props.style), {}, {\n        backgroundImage: !props.columns ? \"url(\".concat(slide.img, \")\") : \"none\"\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, __jsx(Container, {\n      fluid: props.containerFluid,\n      className: \"h-100 \".concat(!props.columns ? \"px-lg-6\" : \"\", \" \").concat(props.containerclass ? props.containerclass : \"\"),\n      style: slide.containerStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, __jsx(Row, {\n      className: \"overlay-content h-100 align-items-center \".concat(slide.rowclass ? slide.rowclass : \"\"),\n      \"data-swiper-parallax\": \"-500\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      lg: {\n        size: props.columns ? 8 : 6,\n        offset: slide.contentoffset\n      },\n      className: slide.contentclass ? slide.contentclass : \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, slide.subtitle && __jsx(\"p\", {\n      className: \"subtitle letter-spacing-\".concat(props.columns ? 5 : 3, \" font-weight-light \").concat(slide.subtitleclass ? slide.subtitleclass : \"\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }, slide.subtitle), __jsx(\"h2\", {\n      className: slide.titleclass ? slide.titleclass : \"\",\n      style: {\n        lineHeight: \"1\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, slide.name), slide.text && __jsx(\"p\", {\n      className: \"\".concat(props.columns ? \"text-muted\" : \"lead\", \"  mb-5\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }, slide.text), __jsx(Button, {\n      color: props.columns ? \"outline-dark\" : \"light\",\n      href: slide.link,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, slide.button)))));\n  })) : \"loading\";\n}\n_c = Swiper;\n\nvar _c;\n\n$RefreshReg$(_c, \"Swiper\");","map":{"version":3,"sources":["C:/Users/Eman/source/repos/emancurmi/joymooncraftsapp/src/components/Swiper.js"],"names":["ReactIdSwiper","Container","Row","Col","Button","Swiper","props","breakpoints","sm","slidesPerView","md","lg","xl","xxl","xxxl","params","containerClass","className","effect","allowTouchMove","spaceBetween","centeredSlides","roundLengths","loop","speed","parallax","autoplay","delay","pagination","el","paginationClass","clickable","dynamicBullets","navigation","nextEl","navigationColor","prevEl","wrapperClass","data","map","slide","index","itemclass","columns","bgdirection","darkOverlay","style","backgroundImage","img","containerFluid","containerclass","containerStyle","rowclass","size","offset","contentoffset","contentclass","subtitle","subtitleclass","titleclass","lineHeight","name","text","link","button"],"mappings":";;;;;;;;;;AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,MAA9B,QAA4C,YAA5C;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACpC,MAAMC,WAAW,GAAG,EAApB;;AACA,MAAID,KAAK,CAACE,EAAV,EAAc;AACZD,IAAAA,WAAW,CAAC,GAAD,CAAX,GAAmB;AACjBE,MAAAA,aAAa,EAAEH,KAAK,CAACE;AADJ,KAAnB;AAGD;;AACD,MAAIF,KAAK,CAACI,EAAV,EAAc;AACZH,IAAAA,WAAW,CAAC,GAAD,CAAX,GAAmB;AACjBE,MAAAA,aAAa,EAAEH,KAAK,CAACI;AADJ,KAAnB;AAGD;;AACD,MAAIJ,KAAK,CAACK,EAAV,EAAc;AACZJ,IAAAA,WAAW,CAAC,GAAD,CAAX,GAAmB;AACjBE,MAAAA,aAAa,EAAEH,KAAK,CAACK;AADJ,KAAnB;AAGD;;AACD,MAAIL,KAAK,CAACM,EAAV,EAAc;AACZL,IAAAA,WAAW,CAAC,IAAD,CAAX,GAAoB;AAClBE,MAAAA,aAAa,EAAEH,KAAK,CAACM;AADH,KAApB;AAGD;;AACD,MAAIN,KAAK,CAACO,GAAV,EAAe;AACbN,IAAAA,WAAW,CAAC,IAAD,CAAX,GAAoB;AAClBE,MAAAA,aAAa,EAAEH,KAAK,CAACO;AADH,KAApB;AAGD;;AACD,MAAIP,KAAK,CAACQ,IAAV,EAAgB;AACdP,IAAAA,WAAW,CAAC,IAAD,CAAX,GAAoB;AAClBE,MAAAA,aAAa,EAAEH,KAAK,CAACQ;AADH,KAApB;AAGD;;AACD,MAAMC,MAAM,GAAG;AACbC,IAAAA,cAAc,6BACZV,KAAK,CAACW,SAAN,GAAkBX,KAAK,CAACW,SAAxB,GAAoC,EADxB,CADD;AAIbR,IAAAA,aAAa,EAAEH,KAAK,CAACG,aAJR;AAKbS,IAAAA,MAAM,EAAEZ,KAAK,CAACY,MALD;AAMbC,IAAAA,cAAc,EAAEb,KAAK,CAACa,cAAN,KAAyB,KAAzB,GAAiC,KAAjC,GAAyC,IAN5C;AAObC,IAAAA,YAAY,EAAEd,KAAK,CAACc,YAPP;AAQbC,IAAAA,cAAc,EAAEf,KAAK,CAACe,cART;AASbC,IAAAA,YAAY,EAAEhB,KAAK,CAACgB,YATP;AAUbC,IAAAA,IAAI,EAAEjB,KAAK,CAACiB,IAVC;AAWbC,IAAAA,KAAK,EAAElB,KAAK,CAACkB,KAAN,GAAclB,KAAK,CAACkB,KAApB,GAA4B,GAXtB;AAYbC,IAAAA,QAAQ,EAAEnB,KAAK,CAACmB,QAZH;AAablB,IAAAA,WAAW,EAAEA,WAbA;AAcbmB,IAAAA,QAAQ,EAAEpB,KAAK,CAACoB,QAAN,GACN;AACEC,MAAAA,KAAK,EAAErB,KAAK,CAACqB;AADf,KADM,GAIN,KAlBS;AAmBbC,IAAAA,UAAU,EACRtB,KAAK,CAACsB,UAAN,KAAqB,KAArB,GACI;AACEC,MAAAA,EAAE,+BAAwBvB,KAAK,CAACwB,eAA9B,CADJ;AAEEC,MAAAA,SAAS,EAAE,IAFb;AAGEC,MAAAA,cAAc,EAAE;AAHlB,KADJ,GAMI,KA1BO;AA2BbC,IAAAA,UAAU,EAAE;AACVC,MAAAA,MAAM,EAAE5B,KAAK,CAAC2B,UAAN,+CAEF3B,KAAK,CAAC6B,eAAN,GAAwB7B,KAAK,CAAC6B,eAA9B,GAAgD,OAF9C,qCAIJ,EALM;AAMVC,MAAAA,MAAM,EAAE9B,KAAK,CAAC2B,UAAN,+CAEF3B,KAAK,CAAC6B,eAAN,GAAwB7B,KAAK,CAAC6B,eAA9B,GAAgD,OAF9C,qCAIJ;AAVM,KA3BC;AAuCbE,IAAAA,YAAY,2BACV/B,KAAK,CAAC+B,YAAN,GAAqB/B,KAAK,CAAC+B,YAA3B,GAA0C,EADhC;AAvCC,GAAf;AA2CA,SAAO/B,KAAK,CAACgC,IAAN,GACL,MAAC,aAAD,eAAmBvB,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGT,KAAK,CAACgC,IAAN,CAAWC,GAAX,CAAe,UAACC,KAAD,EAAQC,KAAR;AAAA,WACd;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,SAAS,YAAKD,KAAK,CAACE,SAAN,GAAkBF,KAAK,CAACE,SAAxB,GAAoC,EAAzC,cACP,CAACpC,KAAK,CAACqC,OAAP,GAAiB,UAAjB,GAA8B,EADvB,cAELH,KAAK,CAACI,WAAN,sBAAgCJ,KAAK,CAACI,WAAtC,IAAsD,EAFjD,cAGPJ,KAAK,CAACK,WAAN,oBAAqC,EAH9B,CAFX;AAOE,MAAA,KAAK,kCACAvC,KAAK,CAACwC,KADN;AAEHC,QAAAA,eAAe,EAAE,CAACzC,KAAK,CAACqC,OAAP,iBAAwBH,KAAK,CAACQ,GAA9B;AAFd,QAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYE,MAAC,SAAD;AACE,MAAA,KAAK,EAAE1C,KAAK,CAAC2C,cADf;AAEE,MAAA,SAAS,kBAAW,CAAC3C,KAAK,CAACqC,OAAP,GAAiB,SAAjB,GAA6B,EAAxC,cACPrC,KAAK,CAAC4C,cAAN,GAAuB5C,KAAK,CAAC4C,cAA7B,GAA8C,EADvC,CAFX;AAKE,MAAA,KAAK,EAAEV,KAAK,CAACW,cALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,MAAC,GAAD;AACE,MAAA,SAAS,qDACPX,KAAK,CAACY,QAAN,GAAiBZ,KAAK,CAACY,QAAvB,GAAkC,EAD3B,CADX;AAIE,8BAAqB,MAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,MAAC,GAAD;AACE,MAAA,EAAE,EAAE;AACFC,QAAAA,IAAI,EAAE/C,KAAK,CAACqC,OAAN,GAAgB,CAAhB,GAAoB,CADxB;AAEFW,QAAAA,MAAM,EAAEd,KAAK,CAACe;AAFZ,OADN;AAKE,MAAA,SAAS,EAAEf,KAAK,CAACgB,YAAN,GAAqBhB,KAAK,CAACgB,YAA3B,GAA0C,EALvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGhB,KAAK,CAACiB,QAAN,IACC;AACE,MAAA,SAAS,oCACPnD,KAAK,CAACqC,OAAN,GAAgB,CAAhB,GAAoB,CADb,gCAGPH,KAAK,CAACkB,aAAN,GAAsBlB,KAAK,CAACkB,aAA5B,GAA4C,EAHrC,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGlB,KAAK,CAACiB,QAPT,CARJ,EAkBE;AACE,MAAA,SAAS,EAAEjB,KAAK,CAACmB,UAAN,GAAmBnB,KAAK,CAACmB,UAAzB,GAAsC,EADnD;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGpB,KAAK,CAACqB,IAJT,CAlBF,EAwBGrB,KAAK,CAACsB,IAAN,IACC;AACE,MAAA,SAAS,YAAKxD,KAAK,CAACqC,OAAN,GAAgB,YAAhB,GAA+B,MAApC,WADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGH,KAAK,CAACsB,IAHT,CAzBJ,EA+BE,MAAC,MAAD;AACE,MAAA,KAAK,EAAExD,KAAK,CAACqC,OAAN,GAAgB,cAAhB,GAAiC,OAD1C;AAEE,MAAA,IAAI,EAAEH,KAAK,CAACuB,IAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGvB,KAAK,CAACwB,MAJT,CA/BF,CANF,CAPF,CAZF,CADc;AAAA,GAAf,CADH,CADK,GAwEL,SAxEF;AA0ED;KArJuB3D,M","sourcesContent":["import ReactIdSwiper from \"react-id-swiper\";\r\nimport { Container, Row, Col, Button } from \"reactstrap\";\r\n\r\nexport default function Swiper(props) {\r\n  const breakpoints = [];\r\n  if (props.sm) {\r\n    breakpoints[565] = {\r\n      slidesPerView: props.sm,\r\n    };\r\n  }\r\n  if (props.md) {\r\n    breakpoints[768] = {\r\n      slidesPerView: props.md,\r\n    };\r\n  }\r\n  if (props.lg) {\r\n    breakpoints[991] = {\r\n      slidesPerView: props.lg,\r\n    };\r\n  }\r\n  if (props.xl) {\r\n    breakpoints[1200] = {\r\n      slidesPerView: props.xl,\r\n    };\r\n  }\r\n  if (props.xxl) {\r\n    breakpoints[1400] = {\r\n      slidesPerView: props.xxl,\r\n    };\r\n  }\r\n  if (props.xxxl) {\r\n    breakpoints[1600] = {\r\n      slidesPerView: props.xxxl,\r\n    };\r\n  }\r\n  const params = {\r\n    containerClass: `swiper-container ${\r\n      props.className ? props.className : \"\"\r\n    }`,\r\n    slidesPerView: props.slidesPerView,\r\n    effect: props.effect,\r\n    allowTouchMove: props.allowTouchMove === false ? false : true,\r\n    spaceBetween: props.spaceBetween,\r\n    centeredSlides: props.centeredSlides,\r\n    roundLengths: props.roundLengths,\r\n    loop: props.loop,\r\n    speed: props.speed ? props.speed : 400,\r\n    parallax: props.parallax,\r\n    breakpoints: breakpoints,\r\n    autoplay: props.autoplay\r\n      ? {\r\n          delay: props.delay,\r\n        }\r\n      : false,\r\n    pagination:\r\n      props.pagination !== false\r\n        ? {\r\n            el: `.swiper-pagination.${props.paginationClass}`,\r\n            clickable: true,\r\n            dynamicBullets: true,\r\n          }\r\n        : false,\r\n    navigation: {\r\n      nextEl: props.navigation\r\n        ? `.swiper-button-next.swiper-button-${\r\n            props.navigationColor ? props.navigationColor : \"white\"\r\n          }.swiper-nav.d-none.d-lg-block`\r\n        : \"\",\r\n      prevEl: props.navigation\r\n        ? `.swiper-button-prev.swiper-button-${\r\n            props.navigationColor ? props.navigationColor : \"white\"\r\n          }.swiper-nav.d-none.d-lg-block`\r\n        : \"\",\r\n    },\r\n    wrapperClass: `swiper-wrapper ${\r\n      props.wrapperClass ? props.wrapperClass : \"\"\r\n    }`,\r\n  };\r\n  return props.data ? (\r\n    <ReactIdSwiper {...params}>\r\n      {props.data.map((slide, index) => (\r\n        <div\r\n          key={index}\r\n          className={`${slide.itemclass ? slide.itemclass : \"\"} ${\r\n            !props.columns ? \"bg-cover\" : \"\"\r\n          } ${slide.bgdirection ? `bg-cover-${slide.bgdirection}` : \"\"} ${\r\n            slide.darkOverlay ? `dark-overlay` : \"\"\r\n          }`}\r\n          style={{\r\n            ...props.style,\r\n            backgroundImage: !props.columns ? `url(${slide.img})` : `none`,\r\n          }}\r\n        >\r\n          <Container\r\n            fluid={props.containerFluid}\r\n            className={`h-100 ${!props.columns ? \"px-lg-6\" : \"\"} ${\r\n              props.containerclass ? props.containerclass : \"\"\r\n            }`}\r\n            style={slide.containerStyle}\r\n          >\r\n            <Row\r\n              className={`overlay-content h-100 align-items-center ${\r\n                slide.rowclass ? slide.rowclass : \"\"\r\n              }`}\r\n              data-swiper-parallax=\"-500\"\r\n            >\r\n              <Col\r\n                lg={{\r\n                  size: props.columns ? 8 : 6,\r\n                  offset: slide.contentoffset,\r\n                }}\r\n                className={slide.contentclass ? slide.contentclass : \"\"}\r\n              >\r\n                {slide.subtitle && (\r\n                  <p\r\n                    className={`subtitle letter-spacing-${\r\n                      props.columns ? 5 : 3\r\n                    } font-weight-light ${\r\n                      slide.subtitleclass ? slide.subtitleclass : \"\"\r\n                    }`}\r\n                  >\r\n                    {slide.subtitle}\r\n                  </p>\r\n                )}\r\n                <h2\r\n                  className={slide.titleclass ? slide.titleclass : \"\"}\r\n                  style={{ lineHeight: \"1\" }}\r\n                >\r\n                  {slide.name}\r\n                </h2>\r\n                {slide.text && (\r\n                  <p\r\n                    className={`${props.columns ? \"text-muted\" : \"lead\"}  mb-5`}\r\n                  >\r\n                    {slide.text}\r\n                  </p>\r\n                )}\r\n                <Button\r\n                  color={props.columns ? \"outline-dark\" : \"light\"}\r\n                  href={slide.link}\r\n                >\r\n                  {slide.button}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      ))}\r\n    </ReactIdSwiper>\r\n  ) : (\r\n    \"loading\"\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}