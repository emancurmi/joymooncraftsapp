{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Container, TabContent, TabPane, Nav, NavItem, NavLink, Media, Row, Col } from \"reactstrap\";\nimport classnames from \"classnames\";\nimport Stars from \"./Stars\";\nimport ReviewForm from \"./ReviewForm\";\n\nconst DetailTabs = ({\n  product\n}) => {\n  const {\n    0: activeTab,\n    1: setActiveTab\n  } = useState(1);\n\n  const toggleTab = tab => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  const groupByN = (n, data) => {\n    let result = [];\n\n    for (let i = 0; i < data.length; i += n) result.push(data.slice(i, i + n));\n\n    return result;\n  };\n\n  const groupedAdditionalInfo = groupByN(4, product.additionalinfo);\n  return __jsx(\"section\", {\n    className: \"mt-5\"\n  }, __jsx(Container, null, __jsx(Nav, {\n    tabs: true,\n    className: \"flex-column flex-sm-row\"\n  }, __jsx(NavItem, null, __jsx(NavLink, {\n    className: classnames(\"detail-nav-link\", {\n      active: activeTab === 1\n    }),\n    onClick: () => {\n      toggleTab(1);\n    }\n  }, \"Description\")), __jsx(NavItem, null, __jsx(NavLink, {\n    className: classnames(\"detail-nav-link\", {\n      active: activeTab === 2\n    }),\n    onClick: () => {\n      toggleTab(2);\n    }\n  }, \"Additional Information\")), __jsx(NavItem, null, __jsx(NavLink, {\n    className: classnames(\"detail-nav-link\", {\n      active: activeTab === 3\n    }),\n    onClick: () => {\n      toggleTab(3);\n    }\n  }, \"Reviews\"))), __jsx(TabContent, {\n    activeTab: activeTab,\n    className: \"py-4\"\n  }, __jsx(TabPane, {\n    tabId: 1,\n    className: \"px-3\"\n  }, __jsx(Row, null, __jsx(Col, {\n    md: \"7\",\n    xl: \"8\",\n    dangerouslySetInnerHTML: {\n      __html: product.description.long\n    }\n  }), __jsx(Col, {\n    md: \"5\",\n    xl: \"4\"\n  }, __jsx(\"img\", {\n    className: \"img-fluid\",\n    src: product.description.image,\n    alt: product.name\n  })))), __jsx(TabPane, {\n    tabId: 2\n  }, __jsx(Row, null, groupedAdditionalInfo.map((infoBlock, index) => __jsx(Col, {\n    key: index,\n    md: \"6\"\n  }, __jsx(\"table\", {\n    className: \"table text-sm\"\n  }, __jsx(\"tbody\", null, infoBlock.map((info, index) => __jsx(\"tr\", {\n    key: index\n  }, __jsx(\"th\", {\n    className: `text-uppercase font-weight-normal ${index == 0 ? \"border-0\" : \"\"}`\n  }, info.name), __jsx(\"td\", {\n    className: `text-muted ${index == 0 ? \"border-0\" : \"\"}`\n  }, info.text))))))))), __jsx(TabPane, {\n    tabId: 3\n  }, __jsx(Row, {\n    className: \"mb-5\"\n  }, __jsx(Col, {\n    lg: \"10\",\n    xl: \"9\"\n  }, product.reviews.map(review => __jsx(Media, {\n    key: review.author,\n    className: \"review\"\n  }, __jsx(\"div\", {\n    className: \"text-center mr-4 mr-xl-5\"\n  }, __jsx(\"img\", {\n    className: \"review-image\",\n    src: review.avatar,\n    alt: review.author\n  }), __jsx(\"span\", {\n    className: \"text-uppercase text-muted\"\n  }, review.date)), __jsx(Media, {\n    body: true\n  }, __jsx(\"h5\", {\n    className: \"mt-2 mb-1\"\n  }, review.author), __jsx(\"div\", {\n    className: \"mb-2\"\n  }, __jsx(Stars, {\n    stars: review.stars,\n    color: \"warning\",\n    secondColor: \"gray-200\",\n    starClass: \"fa-xs\"\n  })), __jsx(\"p\", {\n    className: \"text-muted\"\n  }, review.text)))), __jsx(ReviewForm, null)))))));\n};\n\nexport default DetailTabs;","map":null,"metadata":{},"sourceType":"module"}